[{"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\App.js":"2","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\context\\LayoutContext.js":"3","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\index.js":"4","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\Error.js":"5","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\Layout.js":"6","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\default.js":"7","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\Charts.js":"8","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexHeatmap.js":"9","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexLineChart.js":"10","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\Widget.js":"11","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\PageTitle.js":"12","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\styles.js":"13","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\styles.js":"14","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\styles.js":"15","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\styles.js":"16","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\Tables.js":"17","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\Maps.js":"18","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\Dashboard.js":"19","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\Header.js":"20","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\Icons.js":"21","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Wrappers\\Wrappers.js":"22","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\styles.js":"24","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\styles.js":"25","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\styles.js":"26","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\styles.js":"27","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\Table\\Table.js":"28","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"29","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\Dot.js":"30","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\Notification.js":"31","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\styles.js":"32","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"33","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"34","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\styles.js":"35","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"36","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\genurl\\Genurl.js":"37","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\helpers\\index.js":"38","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\Animation.js":"39","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\settings\\Settings.js":"40","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\styles.js":"41","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\components\\UploadGif.js":"42","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\services\\UploadService.js":"43","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\MTable.js":"44","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\http_common\\HTTPCommon.js":"45","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\news\\News.js":"46","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\UploadService.js":"47","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\http_common\\HTTPCommon.js":"48","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\Sound.js":"49","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\components\\UploadMp3.js":"50"},{"size":509,"mtime":1635245772989,"results":"51","hashOfConfig":"52"},{"size":995,"mtime":1640929586725,"results":"53","hashOfConfig":"52"},{"size":1378,"mtime":1638431694535,"results":"54","hashOfConfig":"52"},{"size":534,"mtime":1635244042059,"results":"55","hashOfConfig":"52"},{"size":1626,"mtime":1635244042034,"results":"56","hashOfConfig":"52"},{"size":3932,"mtime":1640929586729,"results":"57","hashOfConfig":"52"},{"size":3128,"mtime":1640887654335,"results":"58","hashOfConfig":"52"},{"size":5790,"mtime":1635244042024,"results":"59","hashOfConfig":"52"},{"size":1909,"mtime":1635244042025,"results":"60","hashOfConfig":"52"},{"size":1396,"mtime":1635244042026,"results":"61","hashOfConfig":"52"},{"size":2581,"mtime":1635244042016,"results":"62","hashOfConfig":"52"},{"size":447,"mtime":1635244042004,"results":"63","hashOfConfig":"52"},{"size":710,"mtime":1640929586732,"results":"64","hashOfConfig":"52"},{"size":495,"mtime":1640930273634,"results":"65","hashOfConfig":"52"},{"size":1130,"mtime":1640890338332,"results":"66","hashOfConfig":"52"},{"size":1395,"mtime":1635244042036,"results":"67","hashOfConfig":"52"},{"size":235,"mtime":1640929586777,"results":"68","hashOfConfig":"52"},{"size":1010,"mtime":1635244042045,"results":"69","hashOfConfig":"52"},{"size":10248,"mtime":1640930237519,"results":"70","hashOfConfig":"52"},{"size":5600,"mtime":1640933571913,"results":"71","hashOfConfig":"52"},{"size":391433,"mtime":1635244042039,"results":"72","hashOfConfig":"52"},{"size":3892,"mtime":1635246370384,"results":"73","hashOfConfig":"52"},{"size":3391,"mtime":1640929586734,"results":"74","hashOfConfig":"52"},{"size":4043,"mtime":1640928469948,"results":"75","hashOfConfig":"52"},{"size":812,"mtime":1635244042041,"results":"76","hashOfConfig":"52"},{"size":178,"mtime":1635244042047,"results":"77","hashOfConfig":"52"},{"size":3241,"mtime":1640885794368,"results":"78","hashOfConfig":"52"},{"size":1077,"mtime":1640885776083,"results":"79","hashOfConfig":"52"},{"size":4160,"mtime":1636099247879,"results":"80","hashOfConfig":"52"},{"size":884,"mtime":1640885299203,"results":"81","hashOfConfig":"52"},{"size":3340,"mtime":1637858483136,"results":"82","hashOfConfig":"52"},{"size":1539,"mtime":1640885412362,"results":"83","hashOfConfig":"52"},{"size":4589,"mtime":1636363797530,"results":"84","hashOfConfig":"52"},{"size":1561,"mtime":1640929586737,"results":"85","hashOfConfig":"52"},{"size":1040,"mtime":1635244042003,"results":"86","hashOfConfig":"52"},{"size":1075,"mtime":1636099258530,"results":"87","hashOfConfig":"52"},{"size":6432,"mtime":1640929586753,"results":"88","hashOfConfig":"52"},{"size":1167,"mtime":1640929586743,"results":"89","hashOfConfig":"52"},{"size":18495,"mtime":1640931151234,"results":"90","hashOfConfig":"52"},{"size":16394,"mtime":1640933118378,"results":"91","hashOfConfig":"52"},{"size":534,"mtime":1637858483151,"results":"92","hashOfConfig":"52"},{"size":4189,"mtime":1640932613432,"results":"93","hashOfConfig":"52"},{"size":508,"mtime":1640884153890,"results":"94","hashOfConfig":"52"},{"size":3511,"mtime":1640884153896,"results":"95","hashOfConfig":"52"},{"size":176,"mtime":1640884153889,"results":"96","hashOfConfig":"52"},{"size":1532,"mtime":1640929586758,"results":"97","hashOfConfig":"52"},{"size":507,"mtime":1640929586780,"results":"98","hashOfConfig":"52"},{"size":176,"mtime":1640929586781,"results":"99","hashOfConfig":"52"},{"size":7996,"mtime":1640933384735,"results":"100","hashOfConfig":"52"},{"size":3530,"mtime":1640932562655,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1351p3q",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\index.js",[],["209","210"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\App.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\context\\LayoutContext.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\index.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\Error.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\default.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\Charts.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\Dashboard.js",["211","212","213","214","215","216","217","218","219","220"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\Header.js",["221","222"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\Table\\Table.js",["223","224","225"],"import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  keys.shift(); // delete \"id\" key\r\n\r\n  return (\r\n    <Table className=\"mb-0\">\r\n      <TableHead>\r\n        <TableRow>\r\n          {keys.map(key => (\r\n            <TableCell key={key}>{key}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map(({ id, name, email, product, price, date, city, status }) => (\r\n          <TableRow key={id}>\r\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\r\n            <TableCell>{email}</TableCell>\r\n            <TableCell>{product}</TableCell>\r\n            <TableCell>{price}</TableCell>\r\n            <TableCell>{date}</TableCell>\r\n            <TableCell>{city}</TableCell>\r\n            <TableCell>\r\n              <Chip label={status} classes={{root: classes[states[status.toLowerCase()]]}}/>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],["226","227"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\genurl\\Genurl.js",["228","229","230","231","232","233","234","235","236","237","238"],"import { GiphyFetch } from \"@giphy/js-fetch-api\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport Zoom from '@material-ui/core/Zoom/Zoom';\r\nimport {\r\n    StompSessionProvider,\r\n    useSubscription,\r\n} from \"react-stomp-hooks\";\r\n\r\nimport { getSharingGif, getSharingTextStyleId, getSharingSound } from \"../../helpers\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nconst SubscribingComponent = (props) => {\r\n    const gf = new GiphyFetch(\"vmqVD48zw7QGC3hKatE5bUSA0cZdXhyM\");\r\n    const [gifTexts, setGifTexts] = useState([]);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [savedGif, setSavedGif] = useState(\"\");\r\n    const [savedTextStyleId, setSavedTextStyleId] = useState(0);\r\n    const [savedSound, setSavedSound] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [messageQueue, setMessageQueue] = useState([]);\r\n    const [showAnimation, setShowAnimation] = useState(false);\r\n    const [countMessage, setCountMessage] = useState(0);\r\n    const [currentMessage, setCurrentMessage] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [money, setMoney] = useState(0);\r\n    \r\n    const audio = useRef(null);\r\n    const speaking = useRef(null);\r\n\r\n    const sharingGif = getSharingGif();\r\n    const sharingTextStyleId = getSharingTextStyleId();\r\n    const sharingSound = getSharingSound();\r\n\r\n    const getGifTexts = async (text) => {\r\n        const res = await gf.animate(text, { limit: 16 })\r\n        setGifTexts(values => res.data);\r\n    }\r\n\r\n    const Item = (props) => {\r\n        return (\r\n            <div className=\"gif-item\">\r\n                <img src={props.url} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const TextList = (props) => {\r\n        const items = props.gifs.map((itemData, index) => {\r\n            if (index == (sharingTextStyleId ? sharingTextStyleId : savedTextStyleId))\r\n                return <Item url={itemData.url} />;\r\n            return <div></div>\r\n        });\r\n        return <div className=\"text-container\">{items}</div>;\r\n    };\r\n\r\n    const AnimatedText = () => {\r\n        return ( \r\n            <div class=\"content\">\r\n                <h1 class=\"text_shadows\" style={{ color: \"white\", fontWeight: \"bold\"}}>\r\n                    {/*text*/}\r\n                    Cảm ơn <mark style={{ background: \"none\", color: \"red\"}}>{name}</mark> đã donate <mark style={{ background: \"none\", color: \"red\"}}>{money}</mark> đồng!                \r\n                </h1>\r\n                <h1 class=\"text_shadows\" style={{ textShadow: \"none\", color: \"red\", fontWeight: \"bold\", fontSize: \"0.9rem\"}}>{content}</h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const onMessage = (msg) => {\r\n        setCountMessage(values => values + 1);\r\n        setMessageQueue(values => {\r\n            const obj = JSON.parse(msg.body);\r\n            const text = \"Cảm ơn \" + obj.name + \" đã donate \" + obj.money + \" đồng\";\r\n            const content = '\" ' + obj.content + ' \"';\r\n            return [...values, {\r\n                id: countMessage,\r\n                content: content,\r\n                text: text,\r\n                name: obj.name,\r\n                money: obj.money\r\n            }];\r\n        });\r\n        //await getGifTexts(text);\r\n    }\r\n\r\n    useSubscription(\"/topic/message\", (message) => onMessage(message));\r\n\r\n    useEffect(() => {\r\n        if (!showAnimation) return;\r\n        audio.current = new Audio(sharingSound ? sharingSound : savedSound);\r\n        speaking.current = new Audio(`https://web-donate.herokuapp.com/text_to_speech?text=${content}`);\r\n        setTimeout(() => audio.current.play(), 1000);\r\n        setTimeout(() => audio.current.pause(), 4000);\r\n        setTimeout(() => speaking.current.play(), 4100);\r\n        setTimeout(() => setWaiting(false), 1000);\r\n        setTimeout(() => setWaiting(true), 11000);\r\n        setTimeout(() => setCurrentMessage(values => values + 1), 11000);\r\n        setTimeout(() => setShowAnimation(false), 11000);\r\n    }, [showAnimation]);\r\n\r\n    useEffect(() => {\r\n        //alert(currentMessage + \" \" + messageQueue.length);\r\n        if (currentMessage >= messageQueue.length) return;\r\n        if (showAnimation) return;\r\n        const message = messageQueue[currentMessage];\r\n        setContent(values => message.content);\r\n        setText(values => message.text);\r\n        setName(values => message.name);\r\n        setMoney(values => message.money);\r\n        setShowAnimation(true);\r\n    }, [currentMessage, messageQueue, showAnimation]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://web-donate.herokuapp.com/setting\")\r\n        .then(response => {\r\n            if (response.status == \"200\") {\r\n                response.data.map(item => {\r\n                    if (item.id == 1) {\r\n                        setSavedGif(values => item.gifUrl);\r\n                        setSavedTextStyleId(values => item.textStyleId);\r\n                        setSavedSound(values => item.soundUrl);\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <> \r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <Zoom \r\n                    in={!waiting}\r\n                    timeout={{enter: 1500, exit: 200}}\r\n                >\r\n                    <div>\r\n                        <img src={sharingGif ? sharingGif : savedGif} /*width=\"300\" height=\"300\"*//>\r\n                    </div>\r\n                </Zoom>\r\n                <Zoom \r\n                    in={!waiting}\r\n                    timeout={{enter: 1500, exit: 200}}\r\n                >\r\n                    <div>\r\n                        <AnimatedText />\r\n                        {/*<TextList gifs={gifTexts} />*/}\r\n                    </div>\r\n                </Zoom>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Genurl() {\r\n\r\n    return (\r\n        <>\r\n            <StompSessionProvider\r\n                url={\"https://web-donate.herokuapp.com/gs-guide-websocket\"}\r\n                debug={(str) => {\r\n                    console.log(str);\r\n                }}\r\n            >\r\n                <SubscribingComponent />\r\n            </StompSessionProvider>\r\n        </>\r\n    );\r\n}","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\helpers\\index.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\Animation.js",["239","240","241","242","243","244","245","246","247"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Box from '@mui/material/Box';\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    LinearProgress,\r\n    Typography,\r\n    Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport UploadGif from \"./components/UploadGif\";\r\nimport useStyles from \"./styles\";\r\nimport { setSharingGif, setSharingTextStyleId } from \"../../helpers\";\r\nimport UploadService from \"../../services/UploadService\";\r\nimport axios from 'axios';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n}));\r\n  \r\nconst BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n            <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n                position: 'absolute',\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n            }}\r\n            >\r\n            <CloseIcon />\r\n            </IconButton>\r\n        ) : null}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &.Mui-focusVisible': {\r\n      zIndex: 1,\r\n      '& .MuiImageBackdrop-root': {\r\n        opacity: 0.15,\r\n      },\r\n      '& .MuiImageMarked-root': {\r\n        opacity: 0,\r\n      },\r\n      '& .MuiTypography-root': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  });\r\n  \r\nconst Image = styled('span')(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n}));\r\n  \r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst ImageMarked = styled('span')(({ theme }) => ({\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nexport default function Animation() {\r\n    const gf = new GiphyFetch(\"vmqVD48zw7QGC3hKatE5bUSA0cZdXhyM\");\r\n    const [gifs, setGifs] = useState([]);\r\n    const [gifTexts, setGifTexts] = useState([]);\r\n    const [keyword, setKeyword] = useState(\"anime\");\r\n    const [loadingGifs, setLoadingGifs] = useState(false);\r\n    const [loadingGifTexts, setLoadingGifTexts] = useState(false);\r\n    const [openGifDialog, setOpenGifDialog] = useState(false);\r\n    const [openTextStyleDialog, setOpenTextStyleDialog] = useState(false);\r\n    const [focusGif, setFocusGif] = useState(\"\");\r\n    const [focusTextStyle, setFocusTextStyle] = useState(\"\");\r\n    const [focusTextStyleId, setFocusTextStyleId] = useState(0);\r\n    const [choosingGif, setChoosingGif] = useState(\"\");\r\n    const [choosingTextStyleId, setChoosingTextStyleId] = useState(\"\");\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [uploadedGifs, setUploadedGifs] = useState(undefined);\r\n\r\n    const classes = useStyles();\r\n\r\n    const [savedSound, setSavedSound] = useState(\"\");\r\n\r\n    const handleOpenGifDialog = (url) => {\r\n        setFocusGif(url);\r\n        setOpenGifDialog(true);\r\n    };\r\n\r\n    const handleOpenTextStyleDialog = (url, id) => {\r\n        setFocusTextStyle(url);\r\n        setFocusTextStyleId(id);\r\n        setOpenTextStyleDialog(true);\r\n    };\r\n      \r\n    const handleCloseGifDialog = () => {\r\n        setOpenGifDialog(false);\r\n    };\r\n\r\n    const handleCloseTextStyleDialog = () => {\r\n        setOpenTextStyleDialog(false);\r\n    };\r\n\r\n    const handleChooseGif = () => {\r\n        setChoosingGif(focusGif);\r\n        setOpenSnackbar(true);\r\n    }\r\n\r\n    const handleChooseTextStyle = () => {\r\n        setChoosingTextStyleId(focusTextStyleId);\r\n        setOpenSnackbar(true);\r\n    }\r\n\r\n    const GifsList = (props) => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Box className={classes.imageList}>\r\n                    {props.gifs.map((item) => {\r\n                        const id = item.url.split('-').pop();\r\n                        const url = \"https://media.giphy.com/media/\" + id + \"/giphy.gif\";\r\n                        return (\r\n                            <ImageButton\r\n                                focusRipple\r\n                                key={url}\r\n                                style={{\r\n                                    width: \"25%\"\r\n                                }}\r\n                                onClick={() => handleOpenGifDialog(url)}\r\n                            >\r\n                                <ImageSrc style={{ backgroundImage: `url(${url})` }} />\r\n                                <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n                                <Image>\r\n                                    <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"subtitle1\"\r\n                                    color=\"inherit\"\r\n                                    sx={{\r\n                                        position: 'relative',\r\n                                        p: 4,\r\n                                        pt: 2,\r\n                                        pb: (theme) => `calc(${theme.spacing(1)} + 6px)`,\r\n                                    }}\r\n                                    >\r\n                                        Click to choose\r\n                                        <ImageMarked className=\"MuiImageMarked-root\" />\r\n                                    </Typography>\r\n                                </Image>\r\n                            </ImageButton>\r\n                        );\r\n                    })}\r\n                </Box>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    const GifTextsList = (props) => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Box className={classes.imageList}>\r\n                    {props.gifs.map((item, index) => {\r\n                        const url = item.url;\r\n                        return (\r\n                            <ImageButton\r\n                                focusRipple\r\n                                key={url}\r\n                                style={{\r\n                                    width: \"25%\"\r\n                                }}\r\n                                onClick={() => handleOpenTextStyleDialog(url, index)}\r\n                            >\r\n                                <ImageSrc style={{ backgroundImage: `url(${url})` }} />\r\n                                <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n                                <Image>\r\n                                    <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"subtitle1\"\r\n                                    color=\"inherit\"\r\n                                    sx={{\r\n                                        position: 'relative',\r\n                                        p: 4,\r\n                                        pt: 2,\r\n                                        pb: (theme) => `calc(${theme.spacing(1)} + 6px)`,\r\n                                    }}\r\n                                    >\r\n                                        Click to choose\r\n                                        <ImageMarked className=\"MuiImageMarked-root\" />\r\n                                    </Typography>\r\n                                </Image>\r\n                            </ImageButton>\r\n                        );\r\n                    })}\r\n                </Box>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    const UploadedGifsList = (props) => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Box className={classes.imageList}>\r\n                    {props.gifs.map((item) => {\r\n                        const url = item.url;\r\n                        return (\r\n                            <ImageButton\r\n                                focusRipple\r\n                                key={url}\r\n                                style={{\r\n                                    width: \"25%\"\r\n                                }}\r\n                                onClick={() => handleOpenGifDialog(url)}\r\n                            >\r\n                                <ImageSrc style={{ backgroundImage: `url(${url})` }} />\r\n                                <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n                                <Image>\r\n                                    <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"subtitle1\"\r\n                                    color=\"inherit\"\r\n                                    sx={{\r\n                                        position: 'relative',\r\n                                        p: 4,\r\n                                        pt: 2,\r\n                                        pb: (theme) => `calc(${theme.spacing(1)} + 6px)`,\r\n                                    }}\r\n                                    >\r\n                                        Click to choose\r\n                                        <ImageMarked className=\"MuiImageMarked-root\" />\r\n                                    </Typography>\r\n                                </Image>\r\n                            </ImageButton>\r\n                        );\r\n                    })}\r\n                </Box>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    const getGifs = async (keyword) => {\r\n        const res = await gf.search(keyword, { limit: 32 });\r\n        setGifs(values => res.data);\r\n        setTimeout(() => setLoadingGifs(false), 1000);\r\n    }\r\n\r\n    const getGifTexts = async (text) => {\r\n        const res = await gf.animate(text, { limit: 32 })\r\n        setGifTexts(values => res.data);\r\n        setTimeout(() => setLoadingGifTexts(false), 1000);\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setKeyword(event.target.value);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        setSharingGif(choosingGif);\r\n        setSharingTextStyleId(choosingTextStyleId);\r\n        setOpenSnackbar(true);\r\n\r\n        axios.post(\"https://web-donate.herokuapp.com/setting\", {\r\n            id: 1,\r\n            gifUrl: choosingGif,\r\n            textStyleId: choosingTextStyleId,\r\n            soundUrl: savedSound,\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoadingGifs(values => true);\r\n        getGifs(keyword);\r\n        setLoadingGifTexts(values => true);\r\n        getGifTexts(keyword);\r\n    }, [keyword]);\r\n\r\n    useEffect(() => {\r\n        UploadService.getGifFiles()\r\n          .then((response) => {\r\n            setUploadedGifs((values) => response.data);\r\n          })\r\n          .catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://web-donate.herokuapp.com/setting\")\r\n        .then(response => {\r\n            if (response.status == \"200\") {\r\n                response.data.map(item => {\r\n                    if (item.id == 1) {\r\n                        setSavedSound(values => item.soundUrl);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Animation Settings\"/>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <div style={{width: \"50%\"}}>\r\n                        <TextField \r\n                            label=\"Search by keyword\" \r\n                            color=\"primary\" \r\n                            variant=\"outlined\" \r\n                            size=\"small\" \r\n                            fullWidth \r\n                            focused \r\n                            value={keyword}\r\n                            onChange={handleInputChange}\r\n                            spellCheck=\"false\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item container xs={12} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                            <p style={{color: \"#ADC2C4\"}}>Choose Your Favorite Gif</p>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {!loadingGifs && (<GifsList gifs={gifs} />)}\r\n                        {!!loadingGifs && (<LinearProgress />)}\r\n                    </Grid>\r\n                </Grid>\r\n                {/*<Grid item container xs={12} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                            Choose Your Favorite Text Style\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {!loadingGifTexts && (<GifTextsList gifs={gifTexts} />)}\r\n                        {!!loadingGifTexts && (<LinearProgress />)}\r\n                    </Grid>\r\n                </Grid>*/}\r\n                {uploadedGifs && (\r\n                    <Grid item container xs={12} spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                                <p style={{color: \"#ADC2C4\"}}>Choose Your Uploaded Gif</p>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <UploadedGifsList gifs={uploadedGifs}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n                <Grid item container xs={12} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                            <p style={{color: \"#ADC2C4\"}}>Upload your Gifs</p>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <UploadGif />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div \r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleSave}>\r\n                            Save settings\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <BootstrapDialog\r\n                onClose={handleCloseGifDialog}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={openGifDialog}\r\n            >\r\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleCloseGifDialog}>\r\n                    Preview gif\r\n                </BootstrapDialogTitle>\r\n                <DialogContent dividers>\r\n                    <img src={focusGif} width=\"350\"></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button autoFocus onClick={() => {handleChooseGif(); handleCloseGifDialog(); }}>\r\n                    Choose this gif\r\n                </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n            <BootstrapDialog\r\n                onClose={handleCloseTextStyleDialog}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={openTextStyleDialog}\r\n            >\r\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleCloseTextStyleDialog}>\r\n                    Preview text style\r\n                </BootstrapDialogTitle>\r\n                <DialogContent dividers>\r\n                    <img src={focusTextStyle} width=\"350\"></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button autoFocus onClick={() => {handleChooseTextStyle(); handleCloseTextStyleDialog(); }}>\r\n                    Choose this text style\r\n                </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n            <Snackbar open={openSnackbar} autoHideDuration={1000} onClose={handleCloseSnackbar}>\r\n                <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Successfully saved your choice!\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\settings\\Settings.js",["248","249","250","251","252","253","254"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\components\\UploadGif.js",["255"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\services\\UploadService.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\MTable.js",["256"],"import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport axios from 'axios';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: 1000\r\n  }\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nconst Presentation = ({users}) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">NameID_Momo</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Money</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Date</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((user) => {\r\n                return (\r\n                  <StyledTableRow key={user.id}>\r\n\r\n                    <StyledTableCell align=\"left\">{user.nameID_Momo}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      {user.money}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      {user.day}/{user.month}/{user.year}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\nfunction MTable() {\r\n  const reverse = ([head, ...tail]) => \r\n    tail.length === 0\r\n        ? [head]                       // Base case -- cannot reverse a single element.\r\n        : [...reverse(tail), head] \r\n  const [USERS, setUSERS] = React.useState([]);\r\n  React.useEffect(() => {\r\n    axios.get('https://web-donate.herokuapp.com/donate/data_all_momo_donate')\r\n      .then(res => {\r\n        setUSERS(reverse(res.data));\r\n      });\r\n  }, []);\r\n\r\n    return (\r\n      <div>\r\n        <Presentation users={USERS} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MTable;\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\http_common\\HTTPCommon.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\news\\News.js",["257","258","259","260","261","262","263"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function News() {\r\n    const [color, setColor] = useState(\"black\");\r\n    const [speed, setSpeed] = useState(20);\r\n    const [year, setYear] = useState(2021);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://web-donate.herokuapp.com/donate/total_donate_by_year?year=${year}`)\r\n        .then(response => {\r\n            if (response.status == \"200\") {\r\n                let donateInfo = \"Thống kê số tiền donate đã nhận được trong năm \" + year + \": \";\r\n                response.data.map((item, id) => {\r\n                    donateInfo += \"tháng \" + item.month + \" - \" + item.total_donate + \" đồng\";\r\n                    if (id != 11) donateInfo += \" | \";\r\n                    return item;\r\n                });\r\n                setText(donateInfo);\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <marquee\r\n                style={{\r\n                    background: \"linear-gradient(#E89B00, #FFBC00, #FFDE5D)\",\r\n                    color: color,\r\n                    fontSize: \"3vh\",\r\n                    borderStyle: \"double\",\r\n                    border: \"2px solid gray\",\r\n                    fontWeight: \"bold\",\r\n                    fontStyle: \"italic\",\r\n                }}\r\n                scrolldelay={speed}\r\n            >\r\n                {text}\r\n            </marquee>\r\n        </>\r\n    )\r\n}","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\UploadService.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\http_common\\HTTPCommon.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\Sound.js",["264","265","266","267"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\components\\UploadMp3.js",["268"],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"277","line":35,"column":7,"nodeType":"275","messageId":"276","endLine":35,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":50,"column":83,"nodeType":"280","messageId":"281","endLine":50,"endColumn":84},{"ruleId":"282","severity":1,"message":"283","line":57,"column":6,"nodeType":"284","endLine":57,"endColumn":8,"suggestions":"285"},{"ruleId":"278","severity":1,"message":"279","line":59,"column":83,"nodeType":"280","messageId":"281","endLine":59,"endColumn":84},{"ruleId":"278","severity":1,"message":"279","line":69,"column":95,"nodeType":"280","messageId":"281","endLine":69,"endColumn":96},{"ruleId":"282","severity":1,"message":"286","line":78,"column":6,"nodeType":"284","endLine":78,"endColumn":8,"suggestions":"287"},{"ruleId":"278","severity":1,"message":"279","line":80,"column":95,"nodeType":"280","messageId":"281","endLine":80,"endColumn":96},{"ruleId":"288","severity":1,"message":"289","line":100,"column":27,"nodeType":"280","messageId":"290","endLine":100,"endColumn":29},{"ruleId":"282","severity":1,"message":"291","line":108,"column":6,"nodeType":"284","endLine":108,"endColumn":8,"suggestions":"292"},{"ruleId":"273","severity":1,"message":"293","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"294","line":35,"column":7,"nodeType":"275","messageId":"276","endLine":35,"endColumn":20},{"ruleId":"273","severity":1,"message":"295","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":7},{"ruleId":"273","severity":1,"message":"296","line":12,"column":7,"nodeType":"275","messageId":"276","endLine":12,"endColumn":13},{"ruleId":"273","severity":1,"message":"297","line":19,"column":9,"nodeType":"275","messageId":"276","endLine":19,"endColumn":16},{"ruleId":"269","replacedBy":"298"},{"ruleId":"271","replacedBy":"299"},{"ruleId":"273","severity":1,"message":"300","line":15,"column":12,"nodeType":"275","messageId":"276","endLine":15,"endColumn":20},{"ruleId":"273","severity":1,"message":"301","line":21,"column":12,"nodeType":"275","messageId":"276","endLine":21,"endColumn":16},{"ruleId":"273","severity":1,"message":"302","line":36,"column":11,"nodeType":"275","messageId":"276","endLine":36,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":44,"column":17,"nodeType":"305","endLine":44,"endColumn":40},{"ruleId":"273","severity":1,"message":"306","line":49,"column":11,"nodeType":"275","messageId":"276","endLine":49,"endColumn":19},{"ruleId":"288","severity":1,"message":"307","line":51,"column":23,"nodeType":"280","messageId":"290","endLine":51,"endColumn":25},{"ruleId":"282","severity":1,"message":"308","line":100,"column":8,"nodeType":"284","endLine":100,"endColumn":23,"suggestions":"309"},{"ruleId":"288","severity":1,"message":"307","line":117,"column":33,"nodeType":"280","messageId":"290","endLine":117,"endColumn":35},{"ruleId":"310","severity":1,"message":"311","line":118,"column":40,"nodeType":"312","messageId":"313","endLine":118,"endColumn":42},{"ruleId":"288","severity":1,"message":"307","line":119,"column":33,"nodeType":"280","messageId":"290","endLine":119,"endColumn":35},{"ruleId":"303","severity":1,"message":"304","line":143,"column":25,"nodeType":"305","endLine":143,"endColumn":101},{"ruleId":"273","severity":1,"message":"300","line":141,"column":12,"nodeType":"275","messageId":"276","endLine":141,"endColumn":20},{"ruleId":"273","severity":1,"message":"314","line":144,"column":12,"nodeType":"275","messageId":"276","endLine":144,"endColumn":27},{"ruleId":"273","severity":1,"message":"315","line":230,"column":11,"nodeType":"275","messageId":"276","endLine":230,"endColumn":23},{"ruleId":"282","severity":1,"message":"316","line":354,"column":8,"nodeType":"284","endLine":354,"endColumn":17,"suggestions":"317"},{"ruleId":"288","severity":1,"message":"307","line":367,"column":33,"nodeType":"280","messageId":"290","endLine":367,"endColumn":35},{"ruleId":"310","severity":1,"message":"311","line":368,"column":40,"nodeType":"312","messageId":"313","endLine":368,"endColumn":42},{"ruleId":"288","severity":1,"message":"307","line":369,"column":33,"nodeType":"280","messageId":"290","endLine":369,"endColumn":35},{"ruleId":"303","severity":1,"message":"304","line":463,"column":21,"nodeType":"305","endLine":463,"endColumn":53},{"ruleId":"303","severity":1,"message":"304","line":480,"column":21,"nodeType":"305","endLine":480,"endColumn":59},{"ruleId":"273","severity":1,"message":"318","line":16,"column":8,"nodeType":"275","messageId":"276","endLine":16,"endColumn":18},{"ruleId":"273","severity":1,"message":"297","line":140,"column":9,"nodeType":"275","messageId":"276","endLine":140,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":422,"column":24,"nodeType":"280","messageId":"290","endLine":422,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":423,"column":24,"nodeType":"280","messageId":"290","endLine":423,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":438,"column":24,"nodeType":"280","messageId":"290","endLine":438,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":439,"column":24,"nodeType":"280","messageId":"290","endLine":439,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":460,"column":27,"nodeType":"280","messageId":"290","endLine":460,"endColumn":29},{"ruleId":"273","severity":1,"message":"293","line":1,"column":20,"nodeType":"275","messageId":"276","endLine":1,"endColumn":29},{"ruleId":"282","severity":1,"message":"319","line":109,"column":6,"nodeType":"284","endLine":109,"endColumn":8,"suggestions":"320"},{"ruleId":"273","severity":1,"message":"321","line":5,"column":19,"nodeType":"275","messageId":"276","endLine":5,"endColumn":27},{"ruleId":"273","severity":1,"message":"322","line":6,"column":19,"nodeType":"275","messageId":"276","endLine":6,"endColumn":27},{"ruleId":"273","severity":1,"message":"323","line":7,"column":18,"nodeType":"275","messageId":"276","endLine":7,"endColumn":25},{"ruleId":"288","severity":1,"message":"307","line":13,"column":33,"nodeType":"280","messageId":"290","endLine":13,"endColumn":35},{"ruleId":"288","severity":1,"message":"289","line":17,"column":28,"nodeType":"280","messageId":"290","endLine":17,"endColumn":30},{"ruleId":"282","severity":1,"message":"324","line":24,"column":8,"nodeType":"284","endLine":24,"endColumn":10,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":28,"column":13,"nodeType":"305","endLine":39,"endColumn":14},{"ruleId":"273","severity":1,"message":"328","line":95,"column":12,"nodeType":"275","messageId":"276","endLine":95,"endColumn":31},{"ruleId":"288","severity":1,"message":"307","line":210,"column":29,"nodeType":"280","messageId":"290","endLine":210,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":211,"column":36,"nodeType":"312","messageId":"313","endLine":211,"endColumn":38},{"ruleId":"288","severity":1,"message":"307","line":212,"column":29,"nodeType":"280","messageId":"290","endLine":212,"endColumn":31},{"ruleId":"273","severity":1,"message":"293","line":1,"column":20,"nodeType":"275","messageId":"276","endLine":1,"endColumn":29},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'MonthlyToDonationAPI' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'monthlyBarChart'. Either include it or remove the dependency array.","ArrayExpression",["331"],"React Hook React.useEffect has a missing dependency: 'mainChartState'. Either include it or remove the dependency array.",["332"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook React.useEffect has a missing dependency: 'dateObj'. Either include it or remove the dependency array.",["333"],"'useEffect' is defined but never used.","'notifications' is assigned a value but never used.","'Chip' is defined but never used.","'states' is assigned a value but never used.","'classes' is assigned a value but never used.",["329"],["330"],"'gifTexts' is assigned a value but never used.","'text' is assigned a value but never used.","'getGifTexts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextList' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'content', 'savedSound', and 'sharingSound'. Either include them or remove the dependency array.",["334"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loadingGifTexts' is assigned a value but never used.","'GifTextsList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getGifTexts' and 'getGifs'. Either include them or remove the dependency array.",["335"],"'classNames' is defined but never used.","React Hook React.useEffect has a missing dependency: 'reverse'. Either include it or remove the dependency array.",["336"],"'setColor' is assigned a value but never used.","'setSpeed' is assigned a value but never used.","'setYear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'year'. Either include it or remove the dependency array.",["337"],"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'MultilineTextFields' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},"Update the dependencies array to be: [monthlyBarChart]",{"range":"352","text":"353"},"Update the dependencies array to be: [mainChartState]",{"range":"354","text":"355"},"Update the dependencies array to be: [dateObj]",{"range":"356","text":"357"},"Update the dependencies array to be: [content, savedSound, sharingSound, showAnimation]",{"range":"358","text":"359"},"Update the dependencies array to be: [getGifTexts, getGifs, keyword]",{"range":"360","text":"361"},"Update the dependencies array to be: [reverse]",{"range":"362","text":"363"},"Update the dependencies array to be: [year]",{"range":"364","text":"365"},[1459,1461],"[monthlyBarChart]",[2147,2149],"[mainChartState]",[3080,3082],"[dateObj]",[4013,4028],"[content, savedSound, sharingSound, showAnimation]",[12480,12489],"[getGifTexts, getGifs, keyword]",[3385,3387],"[reverse]",[963,965],"[year]"]