[{"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\App.js":"2","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\context\\LayoutContext.js":"3","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\index.js":"4","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\Error.js":"5","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\Layout.js":"6","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\default.js":"7","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\Charts.js":"8","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexHeatmap.js":"9","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexLineChart.js":"10","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\Widget.js":"11","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\PageTitle.js":"12","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\styles.js":"13","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\styles.js":"14","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\styles.js":"15","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\styles.js":"16","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\Tables.js":"17","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\Maps.js":"18","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\Dashboard.js":"19","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\Header.js":"20","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\Icons.js":"21","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Wrappers\\Wrappers.js":"22","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\styles.js":"24","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\styles.js":"25","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\styles.js":"26","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\styles.js":"27","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\Table\\Table.js":"28","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"29","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\Dot.js":"30","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\Notification.js":"31","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\styles.js":"32","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"33","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"34","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\styles.js":"35","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"36","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\genurl\\Genurl.js":"37","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\helpers\\index.js":"38","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\Animation.js":"39","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\settings\\Settings.js":"40","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\styles.js":"41","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\components\\UploadGif.js":"42","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\services\\UploadService.js":"43","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\MTable.js":"44","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\http_common\\HTTPCommon.js":"45","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\news\\News.js":"46","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\UploadService.js":"47","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\http_common\\HTTPCommon.js":"48","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\Sound.js":"49","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\components\\UploadMp3.js":"50"},{"size":509,"mtime":1635245772989,"results":"51","hashOfConfig":"52"},{"size":995,"mtime":1640929586725,"results":"53","hashOfConfig":"52"},{"size":1378,"mtime":1638431694535,"results":"54","hashOfConfig":"52"},{"size":534,"mtime":1635244042059,"results":"55","hashOfConfig":"52"},{"size":1626,"mtime":1635244042034,"results":"56","hashOfConfig":"52"},{"size":3932,"mtime":1640935922108,"results":"57","hashOfConfig":"52"},{"size":3128,"mtime":1640887654335,"results":"58","hashOfConfig":"52"},{"size":5790,"mtime":1635244042024,"results":"59","hashOfConfig":"52"},{"size":1909,"mtime":1635244042025,"results":"60","hashOfConfig":"52"},{"size":1396,"mtime":1635244042026,"results":"61","hashOfConfig":"52"},{"size":2581,"mtime":1635244042016,"results":"62","hashOfConfig":"52"},{"size":447,"mtime":1635244042004,"results":"63","hashOfConfig":"52"},{"size":754,"mtime":1640935997466,"results":"64","hashOfConfig":"52"},{"size":495,"mtime":1640930273634,"results":"65","hashOfConfig":"52"},{"size":1136,"mtime":1640934646076,"results":"66","hashOfConfig":"52"},{"size":1395,"mtime":1635244042036,"results":"67","hashOfConfig":"52"},{"size":235,"mtime":1640929586777,"results":"68","hashOfConfig":"52"},{"size":1010,"mtime":1635244042045,"results":"69","hashOfConfig":"52"},{"size":10248,"mtime":1640930237519,"results":"70","hashOfConfig":"52"},{"size":5600,"mtime":1640933571913,"results":"71","hashOfConfig":"52"},{"size":391433,"mtime":1635244042039,"results":"72","hashOfConfig":"52"},{"size":3892,"mtime":1635246370384,"results":"73","hashOfConfig":"52"},{"size":3391,"mtime":1640929586734,"results":"74","hashOfConfig":"52"},{"size":4043,"mtime":1640928469948,"results":"75","hashOfConfig":"52"},{"size":812,"mtime":1635244042041,"results":"76","hashOfConfig":"52"},{"size":178,"mtime":1635244042047,"results":"77","hashOfConfig":"52"},{"size":3247,"mtime":1640934173697,"results":"78","hashOfConfig":"52"},{"size":1077,"mtime":1640885776083,"results":"79","hashOfConfig":"52"},{"size":4160,"mtime":1636099247879,"results":"80","hashOfConfig":"52"},{"size":884,"mtime":1640885299203,"results":"81","hashOfConfig":"52"},{"size":3340,"mtime":1637858483136,"results":"82","hashOfConfig":"52"},{"size":1548,"mtime":1640934051806,"results":"83","hashOfConfig":"52"},{"size":4589,"mtime":1636363797530,"results":"84","hashOfConfig":"52"},{"size":1561,"mtime":1640929586737,"results":"85","hashOfConfig":"52"},{"size":1040,"mtime":1635244042003,"results":"86","hashOfConfig":"52"},{"size":1075,"mtime":1636099258530,"results":"87","hashOfConfig":"52"},{"size":6432,"mtime":1640929586753,"results":"88","hashOfConfig":"52"},{"size":1167,"mtime":1640929586743,"results":"89","hashOfConfig":"52"},{"size":18857,"mtime":1640936278254,"results":"90","hashOfConfig":"52"},{"size":16394,"mtime":1640933118378,"results":"91","hashOfConfig":"52"},{"size":842,"mtime":1640936242802,"results":"92","hashOfConfig":"52"},{"size":4189,"mtime":1640932613432,"results":"93","hashOfConfig":"52"},{"size":508,"mtime":1640884153890,"results":"94","hashOfConfig":"52"},{"size":3511,"mtime":1640884153896,"results":"95","hashOfConfig":"52"},{"size":176,"mtime":1640884153889,"results":"96","hashOfConfig":"52"},{"size":1532,"mtime":1640929586758,"results":"97","hashOfConfig":"52"},{"size":507,"mtime":1640929586780,"results":"98","hashOfConfig":"52"},{"size":176,"mtime":1640929586781,"results":"99","hashOfConfig":"52"},{"size":8565,"mtime":1640936726132,"results":"100","hashOfConfig":"52"},{"size":3530,"mtime":1640932562655,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1351p3q",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"104"},"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\index.js",[],["214","215"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\App.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\context\\LayoutContext.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\index.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\Error.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\themes\\default.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\Charts.js",[],["216","217"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Widget\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\error\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\Dashboard.js",["218","219","220","221","222","223","224","225","226","227"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport {\r\n  Grid,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useTheme  } from \"@material-ui/styles\";\r\nimport { createTheme } from '@mui/material/styles';\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  Bar,\r\n  Line,\r\n  Area,\r\n  YAxis,\r\n  XAxis,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\n//----API-------\r\nconst MonthlyToDonationAPI =\"http://localhost:3000/table\"\r\n//---------------------------------\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const them = createTheme({\r\n    palette: {\r\n      background: {\r\n        dark: '#424242',\r\n      },\r\n    },\r\n  });\r\n  const dateObj = new Date();\r\n  const [data1, setData1] = React.useState([]);\r\n  React.useEffect(() => {\r\n    axios.get(\"https://web-donate.herokuapp.com/donate/total_donate_by_year?year=\"+`${monthlyBarChart}`)\r\n      .then(res => {\r\n        setData1(res.data.map(d=>\r\n          d={\r\n            'Momo banking' : d.total_donate\r\n          }));\r\n      });\r\n  }, []);\r\n  function getMonthlyBarChart(year){\r\n    axios.get(\"https://web-donate.herokuapp.com/donate/total_donate_by_year?year=\"+`${year}`)\r\n      .then(res => {\r\n        setData1(res.data.map(d=>\r\n          d={\r\n            'Momo banking' : d.total_donate\r\n          }));\r\n      });\r\n    };\r\n  const [data2, setData2] = React.useState([]);\r\n  React.useEffect(() => {\r\n    axios.get(\"https://web-donate.herokuapp.com/donate/total_donate_by_month?year=2021&month=\"+`${mainChartState}`)\r\n      .then(res => {\r\n        setData2(res.data.map(d=>\r\n          d={\r\n            day:d.day-1,\r\n            'Momo banking': d.total_donate,\r\n            desktop: 500000\r\n          }));\r\n      });\r\n  }, []);\r\n  function getMainChartState(month){\r\n    axios.get(\"https://web-donate.herokuapp.com/donate/total_donate_by_month?year=2021&month=\"+`${month}`)\r\n      .then(res => {\r\n        setData2(res.data.map(d=>\r\n          d={\r\n            day:d.day-1,\r\n            'Momo banking' : d.total_donate,\r\n            desktop: 500000\r\n          }));\r\n      });\r\n  }\r\n  const [data3, setData3] = React.useState([\r\n    {\r\n    nameID_Momo: \"No Name\",\r\n    sumMoney: 0\r\n    },\r\n  ]);\r\n  React.useEffect(() => {\r\n    axios.get(\"https://web-donate.herokuapp.com/donate/top_donate_by_day?day=\"+dateObj.getUTCDate()+\"&month=\"+(dateObj.getUTCMonth()+1)+\"&year=\"+dateObj.getUTCFullYear())\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n        if(res.data.length!=0){\r\n        setData3(res.data.map(d=>\r\n          d={\r\n            nameID_Momo: d.nameID_Momo,\r\n            sumMoney: d.sumMoney\r\n          }));\r\n        };\r\n      });\r\n  }, []);\r\n  const [monthlyBarChart,setMonthlyBarChart]=React.useState(dateObj.getUTCFullYear());\r\n  function handleChangeMonthlyBarChart(e){\r\n    setMonthlyBarChart(e.target.value);\r\n    getMonthlyBarChart(e.target.value);\r\n  }\r\n  const [mainChartState,setMainChartState]=React.useState(dateObj.getUTCMonth()+1);\r\n  function handleChangeMainChartState(e){\r\n    setMainChartState(e.target.value);\r\n    getMainChartState(e.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <PageTitle bodyClass={classes.body} title=\"Dashboard\"/>\r\n      <Grid elevation={0} container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            elevation={0}\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Monthly Bar Chart\r\n                </Typography>\r\n                <Select\r\n                className={classes.selectYear}\r\n                  value={monthlyBarChart}\r\n                  onChange={handleChangeMonthlyBarChart}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"2021\">2021</MenuItem>\r\n                  <MenuItem value=\"2022\">2022</MenuItem>\r\n                  <MenuItem value=\"2023\">2023</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n                <BarChart width={730} height={250} data={data1}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"day\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"Momo banking\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"Other\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Monthly Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Momo banking\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Other\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select \r\n                  sx={{ colorText: '#fff' }}\r\n                  value={mainChartState}\r\n                  className={classes.selectYear}\r\n                  onChange={handleChangeMainChartState}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"1\">Jan</MenuItem>\r\n                  <MenuItem value=\"2\">Feb</MenuItem>\r\n                  <MenuItem value=\"3\">Mar</MenuItem>\r\n                  <MenuItem value=\"4\">Apr</MenuItem>\r\n                  <MenuItem value=\"5\">May</MenuItem>\r\n                  <MenuItem value=\"6\">Jun</MenuItem>\r\n                  <MenuItem value=\"7\">Jul</MenuItem>\r\n                  <MenuItem value=\"8\">Aug</MenuItem>\r\n                  <MenuItem value=\"9\">Sep</MenuItem>\r\n                  <MenuItem value=\"10\">Oct</MenuItem>\r\n                  <MenuItem value=\"11\">Nov</MenuItem>\r\n                  <MenuItem value=\"12\">Dec</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\r\n                data={data2}\r\n\r\n              >\r\n                <YAxis\r\n                  \r\n                  // ticks={[0,250000, 500000,750000, 1000000,1250000, 1500000]}\r\n                  // tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  // stroke={theme.palette.text.hint + \"80\"}\r\n                  // tickLine={false}\r\n                />\r\n                <XAxis\r\n                  dataKey=\"day\"\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={them.palette.background.dark}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"Momo banking\"  \r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n                <Tooltip />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid  item xs={12}>\r\n          <Widget\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n            header={\r\n              <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                Monthly To Donation\r\n                </Typography>\r\n            }\r\n          >\r\n            <Table data={data3}/>\r\n          </Widget>   \r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\Header.js",["228","229"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\nimport {\r\n  StompSessionProvider,\r\n  useSubscription,\r\n} from \"react-stomp-hooks\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst notifications = [\r\n  { \r\n    color: \"warning\", \r\n    type: \"notification\",\r\n    message: \"Check out this awesome ticket\" \r\n  },\r\n  {\r\n    color: \"success\",\r\n    type: \"notification\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    color: \"primary\",\r\n    type: \"notification\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  const SubscribingComponent = () => {\r\n    const [notificationsMenu, setNotificationsMenu] = useState(null);\r\n    const [notificationsData, setNotificationsData] = useState([]);\r\n    const [unreadNotifications, setUnreadNotifications] = useState(0);\r\n\r\n    const classes = useStyles();\r\n    const layoutState = useLayoutState();\r\n    const layoutDispatch = useLayoutDispatch();\r\n\r\n    const onMessage = async (msg) => {\r\n      setNotificationsData((values) => {\r\n        let newData = [...values];\r\n        const obj = JSON.parse(msg.body);\r\n        newData.unshift({\r\n          color: \"primary\",\r\n          type: \"notification\",\r\n          message: obj.name + \" vừa donate \" + obj.money + \" đồng\",\r\n        });\r\n        if (newData.length > 5) {\r\n          newData.splice(newData.length - 1, 1);\r\n        }\r\n        return newData;\r\n      });\r\n      setUnreadNotifications(values => values + 1);\r\n    }\r\n  \r\n    useSubscription(\"/topic/message\", async (message) => await onMessage(message));\r\n    /*useEffect(() => {\r\n      setMessage(\"Cam on ban A da donate 100000 dong\");\r\n      setTimeout(() => setMessage(\"Cam on ban B da donate 200000 dong\"), 3000);\r\n      setTimeout(() => setMessage(\"Cam on ban B da donate 300000 dong\"), 6000);\r\n      setTimeout(() => setMessage(\"Cam on ban B da donate 400000 dong\"), 9000);\r\n      setTimeout(() => setMessage(\"Cam on ban B da donate 500000 dong\"), 12000);\r\n      setTimeout(() => setMessage(\"Cam on ban B da donate 600000 dong\"), 15000);\r\n    }, []);*/\r\n\r\n    return (\r\n      <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor: \"#2B383F\", zIndex: \"1250\"}}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={() => toggleSidebar(layoutDispatch)}\r\n            className={classNames(\r\n              classes.headerMenuButtonSandwich,\r\n              classes.headerMenuButtonCollapse,\r\n            )}\r\n          >\r\n            {layoutState.isSidebarOpened ? (\r\n              <ArrowBackIcon\r\n                classes={{\r\n                  root: classNames(\r\n                    classes.headerIcon,\r\n                    classes.headerIconCollapse,\r\n                  ),\r\n                }}\r\n              />\r\n            ) : (\r\n              <MenuIcon\r\n                classes={{\r\n                  root: classNames(\r\n                    classes.headerIcon,\r\n                    classes.headerIconCollapse,\r\n                  ),\r\n                }}\r\n              />\r\n            )}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n            Donation GIFs Webapp\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-haspopup=\"true\"\r\n            aria-controls=\"mail-menu\"\r\n            onClick={e => {\r\n              setNotificationsMenu(e.currentTarget);\r\n              if (unreadNotifications) setUnreadNotifications(0);\r\n            }}\r\n            className={classes.headerMenuButton}\r\n          >\r\n            <Badge\r\n              badgeContent={unreadNotifications ? unreadNotifications : null}\r\n              color=\"warning\"\r\n            >\r\n              <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n            </Badge>\r\n          </IconButton>\r\n          <Menu\r\n            id=\"notifications-menu\"\r\n            open={Boolean(notificationsMenu)}\r\n            anchorEl={notificationsMenu}\r\n            onClose={() => setNotificationsMenu(null)}\r\n            className={classes.headerMenu}\r\n            disableAutoFocusItem\r\n          >\r\n            {notificationsData.map(notification => (\r\n              <MenuItem\r\n                /*key={notification.id}*/\r\n                onClick={() => { setNotificationsMenu(null); setUnreadNotifications(0); }}\r\n                className={classes.headerMenuItem}\r\n              >\r\n                <Notification {...notification} typographyVariant=\"inherit\" />\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StompSessionProvider\r\n        url={\"https://web-donate.herokuapp.com/gs-guide-websocket\"}\r\n        debug={(str) => {\r\n            console.log(str);\r\n        }}\r\n    >\r\n      <SubscribingComponent />\r\n    </StompSessionProvider>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Header\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\icons\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\maps\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\Table\\Table.js",["230","231","232"],"import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  keys.shift(); // delete \"id\" key\r\n\r\n  return (\r\n    <Table className=\"mb-0\">\r\n      <TableHead>\r\n        <TableRow>\r\n          {keys.map(key => (\r\n            <TableCell key={key}>{key}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map(({ id, name, email, product, price, date, city, status }) => (\r\n          <TableRow key={id}>\r\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\r\n            <TableCell>{email}</TableCell>\r\n            <TableCell>{product}</TableCell>\r\n            <TableCell>{price}</TableCell>\r\n            <TableCell>{date}</TableCell>\r\n            <TableCell>{city}</TableCell>\r\n            <TableCell>\r\n              <Chip label={status} classes={{root: classes[states[status.toLowerCase()]]}}/>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],["233","234"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\components\\Notification\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\genurl\\Genurl.js",["235","236","237","238","239","240","241","242","243","244","245"],"import { GiphyFetch } from \"@giphy/js-fetch-api\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport Zoom from '@material-ui/core/Zoom/Zoom';\r\nimport {\r\n    StompSessionProvider,\r\n    useSubscription,\r\n} from \"react-stomp-hooks\";\r\n\r\nimport { getSharingGif, getSharingTextStyleId, getSharingSound } from \"../../helpers\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nconst SubscribingComponent = (props) => {\r\n    const gf = new GiphyFetch(\"vmqVD48zw7QGC3hKatE5bUSA0cZdXhyM\");\r\n    const [gifTexts, setGifTexts] = useState([]);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [savedGif, setSavedGif] = useState(\"\");\r\n    const [savedTextStyleId, setSavedTextStyleId] = useState(0);\r\n    const [savedSound, setSavedSound] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [messageQueue, setMessageQueue] = useState([]);\r\n    const [showAnimation, setShowAnimation] = useState(false);\r\n    const [countMessage, setCountMessage] = useState(0);\r\n    const [currentMessage, setCurrentMessage] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [money, setMoney] = useState(0);\r\n    \r\n    const audio = useRef(null);\r\n    const speaking = useRef(null);\r\n\r\n    const sharingGif = getSharingGif();\r\n    const sharingTextStyleId = getSharingTextStyleId();\r\n    const sharingSound = getSharingSound();\r\n\r\n    const getGifTexts = async (text) => {\r\n        const res = await gf.animate(text, { limit: 16 })\r\n        setGifTexts(values => res.data);\r\n    }\r\n\r\n    const Item = (props) => {\r\n        return (\r\n            <div className=\"gif-item\">\r\n                <img src={props.url} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const TextList = (props) => {\r\n        const items = props.gifs.map((itemData, index) => {\r\n            if (index == (sharingTextStyleId ? sharingTextStyleId : savedTextStyleId))\r\n                return <Item url={itemData.url} />;\r\n            return <div></div>\r\n        });\r\n        return <div className=\"text-container\">{items}</div>;\r\n    };\r\n\r\n    const AnimatedText = () => {\r\n        return ( \r\n            <div class=\"content\">\r\n                <h1 class=\"text_shadows\" style={{ color: \"white\", fontWeight: \"bold\"}}>\r\n                    {/*text*/}\r\n                    Cảm ơn <mark style={{ background: \"none\", color: \"red\"}}>{name}</mark> đã donate <mark style={{ background: \"none\", color: \"red\"}}>{money}</mark> đồng!                \r\n                </h1>\r\n                <h1 class=\"text_shadows\" style={{ textShadow: \"none\", color: \"red\", fontWeight: \"bold\", fontSize: \"0.9rem\"}}>{content}</h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const onMessage = (msg) => {\r\n        setCountMessage(values => values + 1);\r\n        setMessageQueue(values => {\r\n            const obj = JSON.parse(msg.body);\r\n            const text = \"Cảm ơn \" + obj.name + \" đã donate \" + obj.money + \" đồng\";\r\n            const content = '\" ' + obj.content + ' \"';\r\n            return [...values, {\r\n                id: countMessage,\r\n                content: content,\r\n                text: text,\r\n                name: obj.name,\r\n                money: obj.money\r\n            }];\r\n        });\r\n        //await getGifTexts(text);\r\n    }\r\n\r\n    useSubscription(\"/topic/message\", (message) => onMessage(message));\r\n\r\n    useEffect(() => {\r\n        if (!showAnimation) return;\r\n        audio.current = new Audio(sharingSound ? sharingSound : savedSound);\r\n        speaking.current = new Audio(`https://web-donate.herokuapp.com/text_to_speech?text=${content}`);\r\n        setTimeout(() => audio.current.play(), 1000);\r\n        setTimeout(() => audio.current.pause(), 4000);\r\n        setTimeout(() => speaking.current.play(), 4100);\r\n        setTimeout(() => setWaiting(false), 1000);\r\n        setTimeout(() => setWaiting(true), 11000);\r\n        setTimeout(() => setCurrentMessage(values => values + 1), 11000);\r\n        setTimeout(() => setShowAnimation(false), 11000);\r\n    }, [showAnimation]);\r\n\r\n    useEffect(() => {\r\n        //alert(currentMessage + \" \" + messageQueue.length);\r\n        if (currentMessage >= messageQueue.length) return;\r\n        if (showAnimation) return;\r\n        const message = messageQueue[currentMessage];\r\n        setContent(values => message.content);\r\n        setText(values => message.text);\r\n        setName(values => message.name);\r\n        setMoney(values => message.money);\r\n        setShowAnimation(true);\r\n    }, [currentMessage, messageQueue, showAnimation]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://web-donate.herokuapp.com/setting\")\r\n        .then(response => {\r\n            if (response.status == \"200\") {\r\n                response.data.map(item => {\r\n                    if (item.id == 1) {\r\n                        setSavedGif(values => item.gifUrl);\r\n                        setSavedTextStyleId(values => item.textStyleId);\r\n                        setSavedSound(values => item.soundUrl);\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <> \r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <Zoom \r\n                    in={!waiting}\r\n                    timeout={{enter: 1500, exit: 200}}\r\n                >\r\n                    <div>\r\n                        <img src={sharingGif ? sharingGif : savedGif} /*width=\"300\" height=\"300\"*//>\r\n                    </div>\r\n                </Zoom>\r\n                <Zoom \r\n                    in={!waiting}\r\n                    timeout={{enter: 1500, exit: 200}}\r\n                >\r\n                    <div>\r\n                        <AnimatedText />\r\n                        {/*<TextList gifs={gifTexts} />*/}\r\n                    </div>\r\n                </Zoom>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Genurl() {\r\n\r\n    return (\r\n        <>\r\n            <StompSessionProvider\r\n                url={\"https://web-donate.herokuapp.com/gs-guide-websocket\"}\r\n                debug={(str) => {\r\n                    console.log(str);\r\n                }}\r\n            >\r\n                <SubscribingComponent />\r\n            </StompSessionProvider>\r\n        </>\r\n    );\r\n}","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\helpers\\index.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\Animation.js",["246","247","248","249","250","251","252","253","254"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\settings\\Settings.js",["255","256","257","258","259","260","261"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './Settings.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NumberFormat from 'react-number-format';\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Typography from '@mui/material/Typography';\r\nimport  Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles((theme) => ({\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: '#e3e8eb !important'\r\n    }\r\n  },\r\n  notchedOutline: {\r\n    // height:'50px',\r\n    borderWidth: '0.25px',\r\n    borderColor: '#e3e8eb !important'\r\n  },\r\n  multilineColor:{\r\n    color:'white'\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#17242d\" ,\r\n  },\r\n  root1: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#17242d\" ,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1.8),\r\n    color: 'white',\r\n    backgroundColor: \"#17242d\" ,\r\n  },\r\n  Bar: {\r\n    backgroundColor: \"#17242d\" ,\r\n  },\r\n  root2: {\r\n    '& > *': {\r\n      width: '25ch',\r\n    },\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  bootstrapRoot: {\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1.5,\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      backgroundColor: '#0069d9',\r\n      borderColor: '#0062cc',\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none',\r\n      backgroundColor: '#0062cc',\r\n      borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n  },\r\n\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n//-------SaveSettings---------\r\nfunction NodeSave({dataSave}) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  // const [min, setMin] = React.useState(1000);\r\n  // const [max, setMax] = React.useState(1000);\r\n  // React.useEffect(() => {\r\n  //   axios.get(settingsAPI)\r\n  //     .then(res => {\r\n  //       if(dataSave.IdData==1){ setMin(0);}\r\n  //       else {setMin(res.data[dataSave.IdData-2].money);};\r\n  //       if(dataSave.IdData==res.data.length) setMax(100000000000000000000000000000);\r\n  //       else setMax(res.data[dataSave.IdData].money);\r\n  //     });\r\n  // }, []);\r\n  const handleClickVariant = (variant) => () => {\r\n        if(dataSave.values1>dataSave.min&&dataSave.values1<dataSave.max){\r\n          enqueueSnackbar('Successfully saved!', { variant });\r\n          SaveData();\r\n          }\r\n          else{\r\n            enqueueSnackbar('Illegal Min Amount!', { variant });\r\n          }\r\n  };\r\n  function SaveData(){\r\n    axios.put(`${settingsAPI}`, {\r\n        id: dataSave.IdData,\r\n        money: dataSave.values1 ,\r\n        shopTopDonation: dataSave.values2,\r\n        template: dataSave.values3,\r\n        alertDuration: dataSave.values4, \r\n        alertTextDelay :dataSave.values5\r\n      });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        onClick={dataSave.values1>dataSave.min&&dataSave.values1<dataSave.max?handleClickVariant('success'):handleClickVariant('error')}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disableRipple\r\n        //className={classNames(classes.margin, classes.bootstrapRoot)}\r\n        style={{}}\r\n        >\r\n        Save Settings\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction SaveSettings({DataSave}) {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <NodeSave  dataSave={DataSave} />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\n//--------FormRow---------------------------------\r\n  const NumberFormatCustom = React.forwardRef(function NumberFormatCustom(props, ref) {\r\n    const { onChange, ...other } = props;\r\n  \r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={ref}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        thousandSeparator\r\n        isNumericString\r\n        prefix=\"$\"\r\n      />\r\n    );\r\n  });\r\n  \r\n  NumberFormatCustom.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\nfunction NestedGrid({data}) {\r\n  const classes = useStyles();\r\n  // const [values, setValues] = React.useState('1320');\r\n  // const [values1, setValues1] = React.useState('100');\r\n  var [values, setValues] = React.useState({\r\n      values1: data.money  ,\r\n      values2: data.shopTopDonation,\r\n      values3: data.template,\r\n      values4: data.alertDuration, \r\n      values5 :data.alertTextDelay,\r\n      IdData :data.id,\r\n      min:data.min,\r\n      max:data.max,\r\n  });\r\n  var handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  return (\r\n    <div className={classes.root1}>\r\n      <Grid container spacing={5}>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <React.Fragment>\r\n        <Grid item xs={3}>\r\n          <Paper elevation={0} className={classes.paper}>Min Amount</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <div /*className={classes.root2}*/>\r\n          <Box>\r\n            <TextField\r\n              className=\"borderText\"\r\n              variant=\"outlined\"\r\n              value={values.values1}\r\n              // onChange={(event) =>setValuess(event.target.value)}\r\n              onChange={handleChange('values1')}\r\n              name=\"numberformat\"\r\n              id=\"formatted-numberformat-input\"\r\n              InputProps={{\r\n                inputComponent: NumberFormatCustom,\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  notchedOutline: classes.notchedOutline,\r\n                  input: classes.multilineColor\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </div>\r\n        </Grid>\r\n        <Grid item xs={1} style={{display: \"flex\", alignItems: \"center\"}}>\r\n          <Tooltip\r\n            title=\"The smallest a donation can be for the donation alert to be displayed. This is useful if you only want the donation alert to be displayed for larger amounts. Remember, this is the amount donated in the amount donated in the currency you have selected in the donation settings section. Setting this to 0 will make every donation alert be displayed.\"\r\n            arrow>\r\n            <HelpIcon color=\"action\" />\r\n          </Tooltip>\r\n        </Grid>\r\n      </React.Fragment>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <React.Fragment>\r\n        <Grid item xs={3}>\r\n          <Paper elevation={0} className={classes.paper}>Show Donation</Paper>\r\n        </Grid>\r\n        <Grid item xs={1.2}>\r\n        <FormControl component=\"fieldset\">\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name=\"controlled-radio-buttons-group\"\r\n        value={values.values2}\r\n        onChange={handleChange('values2')}\r\n      >\r\n        <FormControlLabel value='false' control={<Radio />} label=\"  Disabled\" />\r\n        <FormControlLabel value='true' control={<Radio />} label=\"  Enabled\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n        </Grid>\r\n        <Grid item xs={1} style={{display: \"flex\", alignItems: \"center\"}}>\r\n        <Tooltip title=\"Is it possible to show notifications on the screen?\" arrow>\r\n        <HelpIcon color=\"action\" />\r\n        </Tooltip>\r\n        </Grid>\r\n      </React.Fragment>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <React.Fragment>\r\n        <Grid item xs={3}>\r\n          <Paper elevation={0} className={classes.paper}>Message Template</Paper>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n        <TextField \r\n        spellCheck=\"false\"\r\n        className=\"borderText\"\r\n        variant=\"outlined\" \r\n        type=\"text\" id=\"MessageTemplate\"\r\n        name=\"MessageTemplate\" \r\n        // defaultValue = \"{name} donated {amount}!\" \r\n        // defaultValue = {data.MessageTemplate}\r\n        value={values.values3}\r\n        onChange={handleChange('values3')}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            notchedOutline: classes.notchedOutline,\r\n            input: classes.multilineColor\r\n          },\r\n        }}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={1} style={{display: \"flex\", alignItems: \"center\"}}>\r\n          <Tooltip \r\n            title=\"When a donation alert shows up, this will be the format of the message. Available Tokens, {name} The name of the donator, {amount} The amount that was donated\" \r\n            arrow>\r\n            <HelpIcon color=\"action\" />\r\n          </Tooltip>\r\n        </Grid>\r\n      </React.Fragment>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <React.Fragment>\r\n        <Grid item xs={3}>\r\n          <Paper elevation={0} className={classes.paper}>Alert Duration</Paper>\r\n        </Grid>\r\n        <Grid className=\"SliderAlert\" item xs={8}>\r\n            <Slider \r\n              max=\"30\"\r\n              // defaultValue={data.AlertDuration}\r\n              value={values.values4}\r\n              onChange={handleChange('values4')}\r\n              aria-label=\"Default\" \r\n              valueLabelDisplay=\"on\" \r\n            />\r\n        </Grid>\r\n        <Grid item xs={1} style={{display: \"flex\", alignItems: \"center\"}}>\r\n        <Tooltip title=\"How many seconds to show this alert before hiding it.\" arrow>\r\n        <HelpIcon color=\"action\" />\r\n        </Tooltip>\r\n        </Grid>\r\n      </React.Fragment>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <React.Fragment>\r\n        <Grid item xs={3}>\r\n          <Paper elevation={0} className={classes.paper}>Alert Text Delay</Paper>\r\n        </Grid>\r\n        <Grid className=\"SliderAlert\" item xs={8}>\r\n          <Slider\r\n            max=\"30\"\r\n            size=\"big\"\r\n            defaultValue={data.AlertTextDelay}\r\n            value={values.values5}\r\n            onChange={handleChange('values5')}\r\n            aria-label=\"Default\" \r\n            valueLabelDisplay=\"on\" \r\n          />\r\n        </Grid>\r\n        <Grid item xs={1} style={{display: \"flex\", alignItems: \"center\"}}>\r\n        <Tooltip title=\"How many seconds after your image/video/audios to show the alert text. This is useful if you want to wait a few seconds for an animation to finish before your alert text appears.\" arrow>\r\n        <HelpIcon color=\"action\" />\r\n        </Tooltip>\r\n        </Grid>\r\n      </React.Fragment>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <React.Fragment >\r\n        \r\n        <Grid \r\n          className=\"ButtonSave\"\r\n          item xs={12} >\r\n          <SaveSettings\r\n            DataSave={values}\r\n          />\r\n        </Grid>\r\n      </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n//-----Ghep API--------\r\nvar settingsAPI =\"https://web-donate.herokuapp.com/setting\";\r\n\r\nfunction SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [functionIsRunning,setFunctionIsRunning]=React.useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n const [DataSettings, setDataSettings] = React.useState([]);\r\n function GetDataSettings() {\r\n    axios.get(settingsAPI)\r\n      .then(res => {\r\n        setDataSettings(res.data.map(data=>\r\n          data={\r\n            money: data.money  ,\r\n            shopTopDonation: data.shopTopDonation,\r\n            template: data.template,\r\n            alertDuration: data.alertDuration, \r\n            alertTextDelay :data.alertTextDelay,\r\n            id :data.id,\r\n            min:data.id!=1?res.data[data.id-2].money:0,\r\n            max:data.id!=res.data.length?res.data[data.id].money:10000000000,\r\n          }));\r\n      })\r\n  };\r\n  React.useEffect(() => {\r\n    axios.get(settingsAPI)\r\n      .then(res => {\r\n        setDataSettings(res.data.map(data=>\r\n          data={\r\n            money: data.money  ,\r\n            shopTopDonation: data.shopTopDonation,\r\n            template: data.template,\r\n            alertDuration: data.alertDuration, \r\n            alertTextDelay :data.alertTextDelay,\r\n            id :data.id,\r\n            min:data.id!=1?res.data[data.id-2].money:0,\r\n            max:data.id!=res.data.length?res.data[data.id].money:10000000000,\r\n          }));\r\n      });\r\n  }, []);\r\n  function handleAddLevel() {\r\n    if (!functionIsRunning) {\r\n      setFunctionIsRunning(true);\r\n      axios.post(settingsAPI, {\r\n        id:DataSettings.length+1,\r\n        template:\"{name} donated {amount}!\",\r\n        alertDuration: 3, \r\n        alertTextDelay :1\r\n    })\r\n    .then(function(){GetDataSettings();})\r\n    .then(function(){setTimeout(() => setFunctionIsRunning(false), 900);});\r\n    \r\n    }\r\n  };\r\n  function deletePost() {\r\n    if (!functionIsRunning) {\r\n      setFunctionIsRunning(true);\r\n    if(DataSettings.length!=1){\r\n    axios({ method: 'delete', url: `${settingsAPI}`, data:DataSettings.length, headers: {\r\n      'Content-Type': 'application/json; charset=utf-8'\r\n    }})\r\n    .then(function(){GetDataSettings();})\r\n    .then(function(){setTimeout(() => setFunctionIsRunning(false), 900);});\r\n    };\r\n    };\r\n  };\r\n  return (\r\n    <div className={classes.root} >\r\n      <AppBar className={classes.Bar} position=\"static\">\r\n        <Tabs aria-label=\"simple tabs example\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"scrollable\"\r\n        scrollButtons\r\n        allowScrollButtonsMobile\r\n        textColor='inherit'\r\n        >\r\n          {DataSettings.map(function(DataSetting){\r\n            const Label= \"Donation Level \"+(DataSetting.id);\r\n            return(\r\n            <Tab\r\n            onClick={GetDataSettings}\r\n            label={Label} {...a11yProps(DataSetting.id-1)} />\r\n          );})\r\n          }\r\n          <IconButton color=\"primary\"\r\n          onClick={deletePost}\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n          <IconButton color=\"primary\"\r\n          onClick={handleAddLevel}\r\n          >\r\n            <AddOutlinedIcon />\r\n          </IconButton>\r\n        </Tabs>\r\n      </AppBar>\r\n      {DataSettings.map(DataSetting=>(\r\n      <TabPanel value={value} index={DataSetting.id-1}>\r\n        <NestedGrid data={DataSetting} onClick={GetDataSettings} />\r\n      </TabPanel>))\r\n    }\r\n    </div>\r\n  );\r\n}\r\nexport default function Settings(){\r\n  return(\r\n    <>\r\n      <PageTitle title=\"General Settings\"/>\r\n      <div id=\"Body\">\r\n        <SimpleTabs />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\styles.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\components\\UploadGif.js",["262"],"import { useState, useEffect } from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Grid, Box, Typography, Button, withStyles } from '@material-ui/core';\r\n\r\nimport UploadService from \"../../../services/UploadService\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 15,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#EEEEEE\",\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#1a90ff',\r\n  },\r\n}))(LinearProgress);\r\n\r\nexport default function UploadGif() {\r\n  const [state, setState] = useState({\r\n    currentFile: undefined,\r\n    previewGif: undefined,\r\n    progress: 0,\r\n    message: \"\",\r\n    isError: false,\r\n  });\r\n\r\n  const onSelectFile = (event) => {\r\n    setState(values => ({\r\n      ...values,\r\n      currentFile: event.target.files[0],\r\n      previewGif: URL.createObjectURL(event.target.files[0]),\r\n      progress: 0,\r\n      message: \"\",\r\n    }));\r\n  };\r\n\r\n  const onUpload = () => {\r\n    setState(values => ({\r\n      ...values,\r\n      progress: 0,\r\n    }));\r\n\r\n    UploadService.upload(state.currentFile, (event) => {\r\n      setState(values => ({\r\n        ...values,\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      }));\r\n    })\r\n      .then((response) => {\r\n        setState(values => ({\r\n          ...values,\r\n          message: response.data.message + \". Reload the page to see the result!\",\r\n          isError: false,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        setState(values => ({\r\n          ...values,\r\n          progress: 0,\r\n          message: \"Could not upload the gif!\",\r\n          currentFile: undefined,\r\n          isError: true\r\n        }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <label htmlFor=\"btn-upload\">\r\n            <input\r\n              id=\"btn-upload\"\r\n              name=\"btn-upload\"\r\n              style={{ display: 'none' }}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={onSelectFile} />\r\n            <Button\r\n              style={{color: \"#A0A7AA\", border: \"1px solid #A0A7AA\"}}\r\n              className=\"btn-choose\"\r\n              variant=\"outlined\"\r\n              component=\"span\" >\r\n                Choose your Gif\r\n            </Button>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className=\"file-name\">\r\n            {state.currentFile ? state.currentFile.name : null}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {state.currentFile && (<Button\r\n            className=\"btn-upload\"\r\n            variant=\"contained\"\r\n            component=\"span\"\r\n            color=\"primary\"\r\n            onClick={onUpload}>\r\n            Upload\r\n          </Button>)}\r\n        </Grid>\r\n        {state.message && (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle2\" className={`upload-message ${state.isError ? \"error\" : \"\"}`}>\r\n              {state.message}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          {state.currentFile && (\r\n            <Box className=\"my20\" display=\"flex\" alignItems=\"center\">\r\n              <Box width=\"100%\" mr={1}>\r\n                <BorderLinearProgress variant=\"determinate\" value={state.progress} />\r\n              </Box>\r\n              <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${state.progress}%`}</Typography>\r\n              </Box>\r\n            </Box>)\r\n          }\r\n        </Grid>\r\n        {state.previewGif && (\r\n          <Grid item container xs={12} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                <p style={{color: \"#ADC2C4\"}}>Preview Gif</p>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <img className=\"preview my20\" src={state.previewGif} alt=\"\" width=\"350\"/>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\services\\UploadService.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\tables\\MTable.js",["263"],"import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport axios from 'axios';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: 1000\r\n  }\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nconst Presentation = ({users}) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">NameID_Momo</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Money</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Date</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((user) => {\r\n                return (\r\n                  <StyledTableRow key={user.id}>\r\n\r\n                    <StyledTableCell align=\"left\">{user.nameID_Momo}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      {user.money}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">\r\n                      {user.day}/{user.month}/{user.year}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\nfunction MTable() {\r\n  const reverse = ([head, ...tail]) => \r\n    tail.length === 0\r\n        ? [head]                       // Base case -- cannot reverse a single element.\r\n        : [...reverse(tail), head] \r\n  const [USERS, setUSERS] = React.useState([]);\r\n  React.useEffect(() => {\r\n    axios.get('https://web-donate.herokuapp.com/donate/data_all_momo_donate')\r\n      .then(res => {\r\n        setUSERS(reverse(res.data));\r\n      });\r\n  }, []);\r\n\r\n    return (\r\n      <div>\r\n        <Presentation users={USERS} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MTable;\r\n","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\animation\\http_common\\HTTPCommon.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\news\\News.js",["264","265","266","267","268","269","270"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function News() {\r\n    const [color, setColor] = useState(\"black\");\r\n    const [speed, setSpeed] = useState(20);\r\n    const [year, setYear] = useState(2021);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://web-donate.herokuapp.com/donate/total_donate_by_year?year=${year}`)\r\n        .then(response => {\r\n            if (response.status == \"200\") {\r\n                let donateInfo = \"Thống kê số tiền donate đã nhận được trong năm \" + year + \": \";\r\n                response.data.map((item, id) => {\r\n                    donateInfo += \"tháng \" + item.month + \" - \" + item.total_donate + \" đồng\";\r\n                    if (id != 11) donateInfo += \" | \";\r\n                    return item;\r\n                });\r\n                setText(donateInfo);\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <marquee\r\n                style={{\r\n                    background: \"linear-gradient(#E89B00, #FFBC00, #FFDE5D)\",\r\n                    color: color,\r\n                    fontSize: \"3vh\",\r\n                    borderStyle: \"double\",\r\n                    border: \"2px solid gray\",\r\n                    fontWeight: \"bold\",\r\n                    fontStyle: \"italic\",\r\n                }}\r\n                scrolldelay={speed}\r\n            >\r\n                {text}\r\n            </marquee>\r\n        </>\r\n    )\r\n}","C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\UploadService.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\services\\http_common\\HTTPCommon.js",[],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\Sound.js",["271","272","273","274"],"C:\\Users\\Administrator\\Desktop\\Projects\\Front-end\\src\\pages\\sound\\components\\UploadMp3.js",["275"],"import { useState, useEffect } from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Grid, Box, Typography, Button, withStyles } from '@material-ui/core';\r\n\r\nimport UploadService from \"../../../services/UploadService\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 15,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#EEEEEE\",\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#1a90ff',\r\n  },\r\n}))(LinearProgress);\r\n\r\nexport default function UploadGif() {\r\n  const [state, setState] = useState({\r\n    currentFile: undefined,\r\n    progress: 0,\r\n    message: \"\",\r\n    isError: false,\r\n  });\r\n\r\n  const onSelectFile = (event) => {\r\n    setState(values => ({\r\n      ...values,\r\n      currentFile: event.target.files[0],\r\n      progress: 0,\r\n      message: \"\",\r\n    }));\r\n  };\r\n\r\n  const onUpload = () => {\r\n    setState(values => ({\r\n      ...values,\r\n      progress: 0,\r\n    }));\r\n\r\n    UploadService.upload(state.currentFile, (event) => {\r\n      setState(values => ({\r\n        ...values,\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      }));\r\n    })\r\n      .then((response) => {\r\n        setState(values => ({\r\n          ...values,\r\n          message: response.data.message + \". Reload the page to see the result!\",\r\n          isError: false,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        setState(values => ({\r\n          ...values,\r\n          progress: 0,\r\n          message: \"Could not upload file!\",\r\n          currentFile: undefined,\r\n          isError: true\r\n        }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <label htmlFor=\"btn-upload\">\r\n            <input\r\n              id=\"btn-upload\"\r\n              name=\"btn-upload\"\r\n              style={{ display: 'none' }}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={onSelectFile} />\r\n            <Button\r\n              style={{color: \"#A0A7AA\", border: \"1px solid #A0A7AA\"}}\r\n              className=\"btn-choose\"\r\n              variant=\"outlined\"\r\n              component=\"span\" >\r\n                Choose your Mp3 file\r\n            </Button>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className=\"file-name\">\r\n            {state.currentFile ? state.currentFile.name : null}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            {state.currentFile && (<Button\r\n            className=\"btn-upload\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            component=\"span\"\r\n            onClick={onUpload}>\r\n            Upload\r\n          </Button>)}\r\n        </Grid>\r\n        {state.message && (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle2\" className={`upload-message ${state.isError ? \"error\" : \"\"}`}>\r\n              {state.message}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          {state.currentFile && (\r\n            <Box className=\"my20\" display=\"flex\" alignItems=\"center\">\r\n              <Box width=\"100%\" mr={1}>\r\n                <BorderLinearProgress variant=\"determinate\" value={state.progress} />\r\n              </Box>\r\n              <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${state.progress}%`}</Typography>\r\n              </Box>\r\n            </Box>)\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}",{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"276","replacedBy":"280"},{"ruleId":"278","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"282","severity":1,"message":"286","line":35,"column":7,"nodeType":"284","messageId":"285","endLine":35,"endColumn":27},{"ruleId":"287","severity":1,"message":"288","line":50,"column":83,"nodeType":"289","messageId":"290","endLine":50,"endColumn":84},{"ruleId":"291","severity":1,"message":"292","line":57,"column":6,"nodeType":"293","endLine":57,"endColumn":8,"suggestions":"294"},{"ruleId":"287","severity":1,"message":"288","line":59,"column":83,"nodeType":"289","messageId":"290","endLine":59,"endColumn":84},{"ruleId":"287","severity":1,"message":"288","line":69,"column":95,"nodeType":"289","messageId":"290","endLine":69,"endColumn":96},{"ruleId":"291","severity":1,"message":"295","line":78,"column":6,"nodeType":"293","endLine":78,"endColumn":8,"suggestions":"296"},{"ruleId":"287","severity":1,"message":"288","line":80,"column":95,"nodeType":"289","messageId":"290","endLine":80,"endColumn":96},{"ruleId":"297","severity":1,"message":"298","line":100,"column":27,"nodeType":"289","messageId":"299","endLine":100,"endColumn":29},{"ruleId":"291","severity":1,"message":"300","line":108,"column":6,"nodeType":"293","endLine":108,"endColumn":8,"suggestions":"301"},{"ruleId":"282","severity":1,"message":"302","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":26},{"ruleId":"282","severity":1,"message":"303","line":35,"column":7,"nodeType":"284","messageId":"285","endLine":35,"endColumn":20},{"ruleId":"282","severity":1,"message":"304","line":8,"column":3,"nodeType":"284","messageId":"285","endLine":8,"endColumn":7},{"ruleId":"282","severity":1,"message":"305","line":12,"column":7,"nodeType":"284","messageId":"285","endLine":12,"endColumn":13},{"ruleId":"282","severity":1,"message":"306","line":19,"column":9,"nodeType":"284","messageId":"285","endLine":19,"endColumn":16},{"ruleId":"276","replacedBy":"307"},{"ruleId":"278","replacedBy":"308"},{"ruleId":"282","severity":1,"message":"309","line":15,"column":12,"nodeType":"284","messageId":"285","endLine":15,"endColumn":20},{"ruleId":"282","severity":1,"message":"310","line":21,"column":12,"nodeType":"284","messageId":"285","endLine":21,"endColumn":16},{"ruleId":"282","severity":1,"message":"311","line":36,"column":11,"nodeType":"284","messageId":"285","endLine":36,"endColumn":22},{"ruleId":"312","severity":1,"message":"313","line":44,"column":17,"nodeType":"314","endLine":44,"endColumn":40},{"ruleId":"282","severity":1,"message":"315","line":49,"column":11,"nodeType":"284","messageId":"285","endLine":49,"endColumn":19},{"ruleId":"297","severity":1,"message":"316","line":51,"column":23,"nodeType":"289","messageId":"299","endLine":51,"endColumn":25},{"ruleId":"291","severity":1,"message":"317","line":100,"column":8,"nodeType":"293","endLine":100,"endColumn":23,"suggestions":"318"},{"ruleId":"297","severity":1,"message":"316","line":117,"column":33,"nodeType":"289","messageId":"299","endLine":117,"endColumn":35},{"ruleId":"319","severity":1,"message":"320","line":118,"column":40,"nodeType":"321","messageId":"322","endLine":118,"endColumn":42},{"ruleId":"297","severity":1,"message":"316","line":119,"column":33,"nodeType":"289","messageId":"299","endLine":119,"endColumn":35},{"ruleId":"312","severity":1,"message":"313","line":143,"column":25,"nodeType":"314","endLine":143,"endColumn":101},{"ruleId":"282","severity":1,"message":"309","line":141,"column":12,"nodeType":"284","messageId":"285","endLine":141,"endColumn":20},{"ruleId":"282","severity":1,"message":"323","line":144,"column":12,"nodeType":"284","messageId":"285","endLine":144,"endColumn":27},{"ruleId":"282","severity":1,"message":"324","line":230,"column":11,"nodeType":"284","messageId":"285","endLine":230,"endColumn":23},{"ruleId":"291","severity":1,"message":"325","line":354,"column":8,"nodeType":"293","endLine":354,"endColumn":17,"suggestions":"326"},{"ruleId":"297","severity":1,"message":"316","line":367,"column":33,"nodeType":"289","messageId":"299","endLine":367,"endColumn":35},{"ruleId":"319","severity":1,"message":"320","line":368,"column":40,"nodeType":"321","messageId":"322","endLine":368,"endColumn":42},{"ruleId":"297","severity":1,"message":"316","line":369,"column":33,"nodeType":"289","messageId":"299","endLine":369,"endColumn":35},{"ruleId":"312","severity":1,"message":"313","line":470,"column":21,"nodeType":"314","endLine":470,"endColumn":53},{"ruleId":"312","severity":1,"message":"313","line":487,"column":21,"nodeType":"314","endLine":487,"endColumn":59},{"ruleId":"282","severity":1,"message":"327","line":16,"column":8,"nodeType":"284","messageId":"285","endLine":16,"endColumn":18},{"ruleId":"282","severity":1,"message":"306","line":140,"column":9,"nodeType":"284","messageId":"285","endLine":140,"endColumn":16},{"ruleId":"297","severity":1,"message":"298","line":422,"column":24,"nodeType":"289","messageId":"299","endLine":422,"endColumn":26},{"ruleId":"297","severity":1,"message":"298","line":423,"column":24,"nodeType":"289","messageId":"299","endLine":423,"endColumn":26},{"ruleId":"297","severity":1,"message":"298","line":438,"column":24,"nodeType":"289","messageId":"299","endLine":438,"endColumn":26},{"ruleId":"297","severity":1,"message":"298","line":439,"column":24,"nodeType":"289","messageId":"299","endLine":439,"endColumn":26},{"ruleId":"297","severity":1,"message":"298","line":460,"column":27,"nodeType":"289","messageId":"299","endLine":460,"endColumn":29},{"ruleId":"282","severity":1,"message":"302","line":1,"column":20,"nodeType":"284","messageId":"285","endLine":1,"endColumn":29},{"ruleId":"291","severity":1,"message":"328","line":109,"column":6,"nodeType":"293","endLine":109,"endColumn":8,"suggestions":"329"},{"ruleId":"282","severity":1,"message":"330","line":5,"column":19,"nodeType":"284","messageId":"285","endLine":5,"endColumn":27},{"ruleId":"282","severity":1,"message":"331","line":6,"column":19,"nodeType":"284","messageId":"285","endLine":6,"endColumn":27},{"ruleId":"282","severity":1,"message":"332","line":7,"column":18,"nodeType":"284","messageId":"285","endLine":7,"endColumn":25},{"ruleId":"297","severity":1,"message":"316","line":13,"column":33,"nodeType":"289","messageId":"299","endLine":13,"endColumn":35},{"ruleId":"297","severity":1,"message":"298","line":17,"column":28,"nodeType":"289","messageId":"299","endLine":17,"endColumn":30},{"ruleId":"291","severity":1,"message":"333","line":24,"column":8,"nodeType":"293","endLine":24,"endColumn":10,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":28,"column":13,"nodeType":"314","endLine":39,"endColumn":14},{"ruleId":"282","severity":1,"message":"337","line":108,"column":12,"nodeType":"284","messageId":"285","endLine":108,"endColumn":31},{"ruleId":"297","severity":1,"message":"316","line":231,"column":29,"nodeType":"289","messageId":"299","endLine":231,"endColumn":31},{"ruleId":"319","severity":1,"message":"320","line":232,"column":36,"nodeType":"321","messageId":"322","endLine":232,"endColumn":38},{"ruleId":"297","severity":1,"message":"316","line":233,"column":29,"nodeType":"289","messageId":"299","endLine":233,"endColumn":31},{"ruleId":"282","severity":1,"message":"302","line":1,"column":20,"nodeType":"284","messageId":"285","endLine":1,"endColumn":29},"no-native-reassign",["338"],"no-negated-in-lhs",["339"],["338"],["339"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'MonthlyToDonationAPI' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'monthlyBarChart'. Either include it or remove the dependency array.","ArrayExpression",["340"],"React Hook React.useEffect has a missing dependency: 'mainChartState'. Either include it or remove the dependency array.",["341"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook React.useEffect has a missing dependency: 'dateObj'. Either include it or remove the dependency array.",["342"],"'useEffect' is defined but never used.","'notifications' is assigned a value but never used.","'Chip' is defined but never used.","'states' is assigned a value but never used.","'classes' is assigned a value but never used.",["338"],["339"],"'gifTexts' is assigned a value but never used.","'text' is assigned a value but never used.","'getGifTexts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextList' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'content', 'savedSound', and 'sharingSound'. Either include them or remove the dependency array.",["343"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loadingGifTexts' is assigned a value but never used.","'GifTextsList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getGifTexts' and 'getGifs'. Either include them or remove the dependency array.",["344"],"'classNames' is defined but never used.","React Hook React.useEffect has a missing dependency: 'reverse'. Either include it or remove the dependency array.",["345"],"'setColor' is assigned a value but never used.","'setSpeed' is assigned a value but never used.","'setYear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'year'. Either include it or remove the dependency array.",["346"],"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'MultilineTextFields' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: [monthlyBarChart]",{"range":"361","text":"362"},"Update the dependencies array to be: [mainChartState]",{"range":"363","text":"364"},"Update the dependencies array to be: [dateObj]",{"range":"365","text":"366"},"Update the dependencies array to be: [content, savedSound, sharingSound, showAnimation]",{"range":"367","text":"368"},"Update the dependencies array to be: [getGifTexts, getGifs, keyword]",{"range":"369","text":"370"},"Update the dependencies array to be: [reverse]",{"range":"371","text":"372"},"Update the dependencies array to be: [year]",{"range":"373","text":"374"},[1459,1461],"[monthlyBarChart]",[2147,2149],"[mainChartState]",[3080,3082],"[dateObj]",[4013,4028],"[content, savedSound, sharingSound, showAnimation]",[12480,12489],"[getGifTexts, getGifs, keyword]",[3385,3387],"[reverse]",[963,965],"[year]"]