[{"D:\\20211\\nmcnpm\\Front-end\\src\\index.js":"1","D:\\20211\\nmcnpm\\Front-end\\src\\context\\LayoutContext.js":"2","D:\\20211\\nmcnpm\\Front-end\\src\\components\\App.js":"3","D:\\20211\\nmcnpm\\Front-end\\src\\themes\\index.js":"4","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Layout\\Layout.js":"5","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\error\\Error.js":"6","D:\\20211\\nmcnpm\\Front-end\\src\\themes\\default.js":"7","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\genurl\\Genurl.js":"8","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\error\\styles.js":"9","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Layout\\styles.js":"10","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\charts\\Charts.js":"11","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\tables\\Tables.js":"12","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\maps\\Maps.js":"13","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\notifications\\Notifications.js":"14","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\typography\\Typography.js":"15","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\Dashboard.js":"16","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\Sidebar.js":"17","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Header\\Header.js":"18","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\icons\\Icons.js":"19","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\mock.js":"20","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\maps\\styles.js":"21","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Header\\styles.js":"22","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\charts\\components\\ApexHeatmap.js":"23","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\charts\\components\\ApexLineChart.js":"24","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\styles.js":"25","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\styles.js":"26","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\typography\\styles.js":"27","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"28","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\components\\Dot.js":"29","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\components\\Table\\Table.js":"30","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Widget\\Widget.js":"31","D:\\20211\\nmcnpm\\Front-end\\src\\components\\PageTitle\\PageTitle.js":"32","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"33","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Wrappers\\Wrappers.js":"34","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\icons\\styles.js":"35","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\notifications\\styles.js":"36","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Notification\\Notification.js":"37","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"38","D:\\20211\\nmcnpm\\Front-end\\src\\components\\PageTitle\\styles.js":"39","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Widget\\styles.js":"40","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"41","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Notification\\styles.js":"42"},{"size":509,"mtime":1636556457723,"results":"43","hashOfConfig":"44"},{"size":1378,"mtime":1636556457723,"results":"45","hashOfConfig":"44"},{"size":807,"mtime":1636556457713,"results":"46","hashOfConfig":"44"},{"size":534,"mtime":1636556457732,"results":"47","hashOfConfig":"44"},{"size":4682,"mtime":1636556555748,"results":"48","hashOfConfig":"44"},{"size":1626,"mtime":1636556457726,"results":"49","hashOfConfig":"44"},{"size":3127,"mtime":1636556457732,"results":"50","hashOfConfig":"44"},{"size":1894,"mtime":1636567309532,"results":"51","hashOfConfig":"44"},{"size":1395,"mtime":1636556457727,"results":"52","hashOfConfig":"44"},{"size":710,"mtime":1636556457717,"results":"53","hashOfConfig":"44"},{"size":5790,"mtime":1636556457724,"results":"54","hashOfConfig":"44"},{"size":2146,"mtime":1636556457730,"results":"55","hashOfConfig":"44"},{"size":1010,"mtime":1636556457729,"results":"56","hashOfConfig":"44"},{"size":13862,"mtime":1636556457729,"results":"57","hashOfConfig":"44"},{"size":4632,"mtime":1636556457731,"results":"58","hashOfConfig":"44"},{"size":7955,"mtime":1636556555749,"results":"59","hashOfConfig":"44"},{"size":3632,"mtime":1636556555748,"results":"60","hashOfConfig":"44"},{"size":5333,"mtime":1636556555747,"results":"61","hashOfConfig":"44"},{"size":391433,"mtime":1636556457728,"results":"62","hashOfConfig":"44"},{"size":1906,"mtime":1636556555749,"results":"63","hashOfConfig":"44"},{"size":178,"mtime":1636556457729,"results":"64","hashOfConfig":"44"},{"size":4043,"mtime":1636556457716,"results":"65","hashOfConfig":"44"},{"size":1909,"mtime":1636556457724,"results":"66","hashOfConfig":"44"},{"size":1396,"mtime":1636556457724,"results":"67","hashOfConfig":"44"},{"size":1363,"mtime":1636556457721,"results":"68","hashOfConfig":"44"},{"size":3000,"mtime":1636556457726,"results":"69","hashOfConfig":"44"},{"size":389,"mtime":1636556457732,"results":"70","hashOfConfig":"44"},{"size":4589,"mtime":1636556457721,"results":"71","hashOfConfig":"44"},{"size":902,"mtime":1636556457720,"results":"72","hashOfConfig":"44"},{"size":1075,"mtime":1636556555749,"results":"73","hashOfConfig":"44"},{"size":2581,"mtime":1636556457722,"results":"74","hashOfConfig":"44"},{"size":447,"mtime":1636556457718,"results":"75","hashOfConfig":"44"},{"size":4160,"mtime":1636556457725,"results":"76","hashOfConfig":"44"},{"size":3892,"mtime":1636556457722,"results":"77","hashOfConfig":"44"},{"size":812,"mtime":1636556457729,"results":"78","hashOfConfig":"44"},{"size":1943,"mtime":1636556457730,"results":"79","hashOfConfig":"44"},{"size":3340,"mtime":1636556555748,"results":"80","hashOfConfig":"44"},{"size":1474,"mtime":1636556457721,"results":"81","hashOfConfig":"44"},{"size":482,"mtime":1636556457719,"results":"82","hashOfConfig":"44"},{"size":1015,"mtime":1636556457722,"results":"83","hashOfConfig":"44"},{"size":1075,"mtime":1636556457725,"results":"84","hashOfConfig":"44"},{"size":1040,"mtime":1636556457717,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"hxez13",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"D:\\20211\\nmcnpm\\Front-end\\src\\index.js",[],["177","178"],"D:\\20211\\nmcnpm\\Front-end\\src\\context\\LayoutContext.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\App.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\themes\\index.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Layout\\Layout.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\error\\Error.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\themes\\default.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\genurl\\Genurl.js",["179","180","181"],"import { GiphyFetch } from \"@giphy/js-fetch-api\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n    StompSessionProvider,\r\n    useSubscription,\r\n} from \"react-stomp-hooks\";\r\n\r\nexport default function Genurl() {\r\n    const SubscribingComponent = () => {\r\n        const gf = new GiphyFetch(\"vmqVD48zw7QGC3hKatE5bUSA0cZdXhyM\");\r\n        const [gifTexts, setGifTexts] = useState([]);\r\n        const [waiting, setWaiting] = useState(true);\r\n\r\n        const ws = useRef(null);\r\n\r\n        const getGifTexts = async (text) => {\r\n            const res = await gf.animate(text, { limit: 1 })\r\n            setGifTexts(values => res.data);\r\n            setWaiting(values => false);\r\n        }\r\n\r\n        const Item = (props) => {\r\n            return (\r\n                <div className=\"gif-item\">\r\n                    <img src={props.url} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const TextList = (props) => {\r\n            const items = props.gifs.map((itemData) => {\r\n                return <Item url={itemData.url} />;\r\n            });\r\n            return <div className=\"text-container\">{items}</div>;\r\n        };\r\n\r\n        const onMessage = async (msg) => {\r\n            setWaiting(values => true);\r\n            await getGifTexts(msg.body);\r\n        }\r\n\r\n        useSubscription(\"/topic/message\", async (message) => await onMessage(message));\r\n\r\n        return (\r\n            <>\r\n                {!waiting && (\r\n                    <TextList gifs={gifTexts} />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StompSessionProvider\r\n                url={\"http://localhost:8080/gs-guide-websocket\"}\r\n                debug={(str) => {\r\n                    console.log(str);\r\n                }}\r\n            >\r\n                <SubscribingComponent />\r\n            </StompSessionProvider>\r\n        </>\r\n    );\r\n}\r\n","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\error\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Layout\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\charts\\Charts.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\tables\\Tables.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\maps\\Maps.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\notifications\\Notifications.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\typography\\Typography.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\Dashboard.js",["182","183"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  Bar,\r\n  Line,\r\n  Area,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\"/>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Monthly Bar Chart\r\n                </Typography>\r\n                <Select\r\n                  value=\"0\"\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"0\">2020</MenuItem>\r\n                  <MenuItem value=\"1\">2021</MenuItem>\r\n                  <MenuItem value=\"2\">2022</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <BarChart width={730} height={250} data={mock.data}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"day\" />\r\n                <YAxis />\r\n                <Legend />\r\n                <Bar dataKey=\"Momo banking\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"Other\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Monthly Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Momo banking\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Other\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value=\"0\"\r\n                  //onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"0\">Jan</MenuItem>\r\n                  <MenuItem value=\"1\">Feb</MenuItem>\r\n                  <MenuItem value=\"2\">Mar</MenuItem>\r\n                  <MenuItem value=\"3\">Apr</MenuItem>\r\n                  <MenuItem value=\"4\">May</MenuItem>\r\n                  <MenuItem value=\"5\">Jun</MenuItem>\r\n                  <MenuItem value=\"6\">Jul</MenuItem>\r\n                  <MenuItem value=\"7\">Aug</MenuItem>\r\n                  <MenuItem value=\"8\">Sep</MenuItem>\r\n                  <MenuItem value=\"9\">Oct</MenuItem>\r\n                  <MenuItem value=\"10\">Nov</MenuItem>\r\n                  <MenuItem value=\"11\">Dec</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Monthly Top Donation\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\Sidebar.js",["184","185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Header\\Header.js",["188","189","190","191"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Search as SearchIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst notifications = [\r\n  { \r\n    color: \"warning\", \r\n    type: \"notification\",\r\n    message: \"Check out this awesome ticket\" \r\n  },\r\n  {\r\n    color: \"success\",\r\n    type: \"notification\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    color: \"primary\",\r\n    type: \"notification\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  var [notificationsData, setNotificationsData] = useState([]);\r\n  var ws = useRef(null);\r\n\r\n  const onMessage = (event) => {\r\n    let recv = JSON.parse(event.data);\r\n    setNotificationsData((values) => {\r\n      let newData = [...values];\r\n      newData.push({\r\n        color: \"primary\",\r\n        type: \"notification\",\r\n        message: recv.data,\r\n      });\r\n      if (newData.length > 5) {\r\n        newData = newData.slice(1);\r\n      }\r\n      return newData;\r\n    });\r\n  }\r\n\r\n  /*useEffect(() => {\r\n    ws.current = new WebSocket(\"localhost:3000\");\r\n    ws.current.onmessage = onMessage;\r\n    const interval = setInterval(() => ws.current.send(\"echo\"), 1000);\r\n    return () => {\r\n      ws.current.close();\r\n      clearInterval(interval);\r\n    }\r\n  }, []);*/\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Donation GIFs Webapp\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications/* {notificationsData} */.map(notification => (\r\n            <MenuItem\r\n              /*key={notification.id}*/\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\20211\\nmcnpm\\Front-end\\src\\pages\\icons\\Icons.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\mock.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\maps\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Header\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\typography\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\components\\Table\\Table.js",["192","193","194"],"import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  keys.shift(); // delete \"id\" key\r\n\r\n  return (\r\n    <Table className=\"mb-0\">\r\n      <TableHead>\r\n        <TableRow>\r\n          {keys.map(key => (\r\n            <TableCell key={key}>{key}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map(({ id, name, bankingNum, date, money}) => (\r\n          <TableRow key={id}>\r\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\r\n            <TableCell>{bankingNum}</TableCell>\r\n            <TableCell>{date}</TableCell>\r\n            <TableCell>{money}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n","D:\\20211\\nmcnpm\\Front-end\\src\\components\\Widget\\Widget.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\icons\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\notifications\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Notification\\Notification.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\PageTitle\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Widget\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\20211\\nmcnpm\\Front-end\\src\\components\\Notification\\styles.js",[],["195","196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"205","line":14,"column":15,"nodeType":"203","messageId":"204","endLine":14,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":25,"column":21,"nodeType":"208","endLine":25,"endColumn":44},{"ruleId":"201","severity":1,"message":"209","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"210","line":32,"column":8,"nodeType":"203","messageId":"204","endLine":32,"endColumn":15},{"ruleId":"201","severity":1,"message":"211","line":9,"column":21,"nodeType":"203","messageId":"204","endLine":9,"endColumn":32},{"ruleId":"201","severity":1,"message":"212","line":10,"column":19,"nodeType":"203","messageId":"204","endLine":10,"endColumn":30},{"ruleId":"201","severity":1,"message":"213","line":11,"column":18,"nodeType":"203","messageId":"204","endLine":11,"endColumn":25},{"ruleId":"201","severity":1,"message":"214","line":23,"column":8,"nodeType":"203","messageId":"204","endLine":23,"endColumn":11},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"215","line":66,"column":8,"nodeType":"203","messageId":"204","endLine":66,"endColumn":25},{"ruleId":"201","severity":1,"message":"205","line":67,"column":7,"nodeType":"203","messageId":"204","endLine":67,"endColumn":9},{"ruleId":"201","severity":1,"message":"216","line":69,"column":9,"nodeType":"203","messageId":"204","endLine":69,"endColumn":18},{"ruleId":"201","severity":1,"message":"217","line":8,"column":3,"nodeType":"203","messageId":"204","endLine":8,"endColumn":7},{"ruleId":"201","severity":1,"message":"218","line":12,"column":7,"nodeType":"203","messageId":"204","endLine":12,"endColumn":13},{"ruleId":"201","severity":1,"message":"219","line":19,"column":9,"nodeType":"203","messageId":"204","endLine":19,"endColumn":16},{"ruleId":"197","replacedBy":"220"},{"ruleId":"199","replacedBy":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ws' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'BigStat' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'notificationsData' is assigned a value but never used.","'onMessage' is assigned a value but never used.","'Chip' is defined but never used.","'states' is assigned a value but never used.","'classes' is assigned a value but never used.",["222"],["223"],"no-global-assign","no-unsafe-negation"]